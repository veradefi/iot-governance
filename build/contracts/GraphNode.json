{
  "contractName": "GraphNode",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "key",
          "type": "string"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "name": "addKeyAuth",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "smartKey",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "date",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "transaction_type",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHealthStatus",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contrib_amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTransactionCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmins",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "href",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "transferEth",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "getValueByHash",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "itemMetaData",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_health",
          "type": "uint8"
        }
      ],
      "name": "setHealth",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSmartKey",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getHealth",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selectItems",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "health",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "activated",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "activateKey",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "setHref",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "meta",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "value",
          "type": "string"
        }
      ],
      "name": "addKeyValueByHash",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "banned",
          "type": "address"
        }
      ],
      "name": "addBanned",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_rel",
          "type": "string"
        },
        {
          "name": "_val",
          "type": "string"
        }
      ],
      "name": "upsertMetaData",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nodeData",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selectMetaData",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getKeyAuth",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_smartKey",
          "type": "address"
        },
        {
          "name": "adminAddress",
          "type": "address[]"
        },
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "HealthUpdate",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_node",
          "type": "address"
        },
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "upsertItem",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "getItem",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106200020b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303db428d1462000218578063113adf4914620002e257806314538128146200033c57806314bfd6d014620003e1578063173825d914620004515780631801e1561462000497578063202e079d14620004cd57806323ca0cd214620004fb57806324d7806c14620005555780632f54bf6e14620005b357806331ae450b146200061157806336eeaa6a146200068257806349f9c0e414620007185780635436e5a014620007685780635571edeb14620008185780635b2ce586146200088c5780635b6beeb914620008b15780635c866c781462000939578063640e7fd5146200099357806367d90da214620009d0578063704802751462000a665780637065cb481462000aac57806374ddcd6e1462000af25780637633a22c1462000b63578063779d86771462000ba05780639172fe081462000bfa578063b6010fcd1462000c32578063b7760c8f1462000cde578063b9d191661462000d2e578063bfb231d21462000db2578063c19d93fb1462000e22578063cd5cfdaf1462000e5f578063d4c2f75c1462000ecf578063e1b2e8b31462000f61578063ec6f214e1462000fa7578063f63553b5146200108b578063f95fd40b14620010ff578063fbfa77cf1462001170578063fd08e0c714620011ca575b6200021633620012b2565b005b3480156200022557600080fd5b50620002c8600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620012f7565b604051808215151515815260200191505060405180910390f35b348015620002ef57600080fd5b50620002fa620013ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200034957600080fd5b506200038a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620013f0565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b348015620003ee57600080fd5b506200040f600480360381019080803590602001909291905050506200145d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200045e57600080fd5b5062000495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200149c565b005b348015620004a457600080fd5b50620004af620015a9565b60405180826000191660001916815260200191505060405180910390f35b348015620004da57600080fd5b50620004e562001846565b6040518082815260200191505060405180910390f35b3480156200050857600080fd5b506200053f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200184c565b6040518082815260200191505060405180910390f35b3480156200056257600080fd5b5062000599600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001898565b604051808215151515815260200191505060405180910390f35b348015620005c057600080fd5b50620005f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620018b8565b604051808215151515815260200191505060405180910390f35b3480156200061e57600080fd5b5062000629620018d8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200066e57808201518184015260208101905062000651565b505050509050019250505060405180910390f35b3480156200068f57600080fd5b506200069a62001968565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620006dc578082015181840152602081019050620006bf565b50505050905090810190601f1680156200070a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200072557600080fd5b506200076660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a0a565b005b3480156200077557600080fd5b506200079a600480360381019080803560001916906020019092919050505062001bf1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620007dc578082015181840152602081019050620007bf565b50505050905090810190601f1680156200080a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200082557600080fd5b506200084a600480360381019080803560001916906020019092919050505062001d0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620008af600480360381019080803560ff16906020019092919050505062001d3e565b005b348015620008be57600080fd5b506200091b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620021fc565b60405180826000191660001916815260200191505060405180910390f35b3480156200094657600080fd5b50620009516200226a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620009a057600080fd5b50620009ab62002294565b60405180826006811115620009bc57fe5b60ff16815260200191505060405180910390f35b62000a4c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620022ab565b604051808215151515815260200191505060405180910390f35b34801562000a7357600080fd5b5062000aaa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002512565b005b34801562000ab957600080fd5b5062000af0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002682565b005b34801562000aff57600080fd5b5062000b0a6200278f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000b4f57808201518184015260208101905062000b32565b505050509050019250505060405180910390f35b34801562000b7057600080fd5b5062000b7b6200281f565b6040518082600681111562000b8c57fe5b60ff16815260200191505060405180910390f35b34801562000bad57600080fd5b5062000be4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002832565b6040518082815260200191505060405180910390f35b62000c30600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012b2565b005b34801562000c3f57600080fd5b5062000c9c600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200284a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000ceb57600080fd5b5062000d2c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200292f565b005b34801562000d3b57600080fd5b5062000d98600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002bd2565b604051808215151515815260200191505060405180910390f35b34801562000dbf57600080fd5b5062000de06004803603810190808035906020019092919050505062002c4e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000e2f57600080fd5b5062000e3a62002c8d565b6040518082600281111562000e4b57fe5b60ff16815260200191505060405180910390f35b34801562000e6c57600080fd5b5062000e8d6004803603810190808035906020019092919050505062002ca0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000edc57600080fd5b5062000f476004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002cdf565b604051808215151515815260200191505060405180910390f35b34801562000f6e57600080fd5b5062000fa5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002d76565b005b62001049600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002f51565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200109857600080fd5b50620010bd6004803603810190808035600019169060200190929190505050620036b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200110c57600080fd5b5062001117620036e9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200115c5780820151818401526020810190506200113f565b505050509050019250505060405180910390f35b3480156200117d57600080fd5b506200118862003779565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620011d757600080fd5b5062001234600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200379f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200127657808201518184015260208101905062001259565b50505050905090810190601f168015620012a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600460146101000a81548160ff02191690836002811115620012d257fe5b0217905550620012ee346005546200387090919063ffffffff16565b60058190555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200135257600080fd5b620013c2836040518082805190602001908083835b6020831015156200138e578051825260208201915060208101905060208303925062001367565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208362002cdf565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020818154811015156200140c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6001818154811015156200146d57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620014f557600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200154e57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806006811115620015b857fe5b600460159054906101000a900460ff166006811115620015d457fe5b141562001604577f50726f766973696f6e696e670000000000000000000000000000000000000000905062001843565b600160068111156200161257fe5b600460159054906101000a900460ff1660068111156200162e57fe5b14156200165e577f4365727469666965640000000000000000000000000000000000000000000000905062001843565b600260068111156200166c57fe5b600460159054906101000a900460ff1660068111156200168857fe5b1415620016b8577f4d6f646966696564000000000000000000000000000000000000000000000000905062001843565b60036006811115620016c657fe5b600460159054906101000a900460ff166006811115620016e257fe5b141562001712577f436f6d70726f6d69736564000000000000000000000000000000000000000000905062001843565b600460068111156200172057fe5b600460159054906101000a900460ff1660068111156200173c57fe5b14156200176c577f4d616c66756e6374696f6e696e67000000000000000000000000000000000000905062001843565b600560068111156200177a57fe5b600460159054906101000a900460ff1660068111156200179657fe5b1415620017c6577f4861726d66756c00000000000000000000000000000000000000000000000000905062001843565b600680811115620017d357fe5b600460159054906101000a900460ff166006811115620017ef57fe5b14156200181f577f436f756e74657266656974000000000000000000000000000000000000000000905062001843565b7f436f756e7465726665697400000000000000000000000000000000000000000090505b90565b60055481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156200195e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001913575b5050505050905090565b600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001a025780601f10620019d65761010080835404028352916020019162001a02565b820191906000526020600020905b815481529060010190602001808311620019e457829003601f168201915b505050505081565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001a6357600080fd5b6001600281111562001a7157fe5b600460149054906101000a900460ff16600281111562001a8d57fe5b14151562001a9a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801562001ae1573d6000803e3d6000fd5b50600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160018152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001c4c57600080fd5b6008600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001cff5780601f1062001cd35761010080835404028352916020019162001cff565b820191906000526020600020905b81548152906001019060200180831162001ce157829003601f168201915b50505050509050919050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460156101000a81548160ff0219169083600681111562001d5d57fe5b0217905550600181600681111562001d7157fe5b111562001f0457600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c74685761726e696e67000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b15801562001e9a57600080fd5b505af115801562001eaf573d6000803e3d6000fd5b50505050506040513d602081101562001ec757600080fd5b8101908080519060200190929190505050506002600460146101000a81548160ff0219169083600281111562001ef957fe5b02179055506200208b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c746855706461746500000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b1580156200202657600080fd5b505af11580156200203b573d6000803e3d6000fd5b50505050506040513d60208110156200205357600080fd5b8101908080519060200190929190505050506001600460146101000a81548160ff021916908360028111156200208557fe5b02179055505b7fb6d7372bb54b80a5b1d60d3b1da737719783cc92a2095f10d9195105f7abeca58160405180826006811115620020be57fe5b60ff16815260200191505060405180910390a1620020e8346005546200387090919063ffffffff16565b600581905550600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200134815260200160008152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505050565b6000816040518082805190602001908083835b6020831015156200223657805182526020820191506020810190506020830392506200220f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460159054906101000a900460ff16905090565b600080620022b983620021fc565b90506000620022c8846200284a565b73ffffffffffffffffffffffffffffffffffffffff161415620023a657600c8490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600d6000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430877f4e6577436174616c6f67756500000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b158015620024c857600080fd5b505af1158015620024dd573d6000803e3d6000fd5b50505050506040513d6020811015620024f557600080fd5b810190808051906020019092919050505050600191505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200256a57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620025c257600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620026db57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200273457600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156200281557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620027ca575b5050505050905090565b600460159054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b600080600183511015620028615730915062002929565b6200286c83620021fc565b9050600073ffffffffffffffffffffffffffffffffffffffff16600d6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200292457600d6000826000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915062002929565b600091505b50919050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200298857600080fd5b600160028111156200299657fe5b600460149054906101000a900460ff166002811115620029b257fe5b141515620029bf57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801562002a8557600080fd5b505af115801562002a9a573d6000803e3d6000fd5b505050506040513d602081101562002ab157600080fd5b810190808051906020019092919050505050600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160018152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002c2c57600080fd5b81600b908051906020019062002c449291906200388f565b5060019050919050565b600c8181548110151562002c5e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b60098181548110151562002cb057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002d3a57600080fd5b81600860008560001916600019168152602001908152602001600020908051906020019062002d6b9291906200388f565b506001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002dd057600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002e2857600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562002f4d5760018181548110151562002ea257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562002f3f5760018181548110151562002f1157fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062002e84565b5050565b600080600062002f6185620021fc565b9150600073ffffffffffffffffffffffffffffffffffffffff16600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620033825760019050803090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050803390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018686620030d362003916565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200184810384528781815481526020019150805480156200318757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200313c575b5050848103835286818151815260200191508051906020019080838360005b83811015620031c3578082015181840152602081019050620031a6565b50505050905090810190601f168015620031f15780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156200322c5780820151818401526020810190506200320f565b50505050905090810190601f1680156200325a5780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f08015801562003281573d6000803e3d6000fd5b50600a6000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620034d4565b600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631aae2531856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620034475780820151818401526020810190506200342a565b50505050905090810190601f168015620034755780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200349557600080fd5b505af1158015620034aa573d6000803e3d6000fd5b505050506040513d6020811015620034c157600080fd5b8101908080519060200190929190505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430600a6000876000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f4d657461446174615570646174650000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b1580156200363157600080fd5b505af115801562003646573d6000803e3d6000fd5b50505050506040513d60208110156200365e57600080fd5b810190808051906020019092919050505050600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250505092915050565b600d6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060098054806020026020016040519081016040528092919081815260200182805480156200376f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003724575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620037fa57600080fd5b62003869826040518082805190602001908083835b6020831015156200383657805182526020820191506020810190506020830392506200380f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902062001bf1565b9050919050565b60008082840190508381101515156200388557fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620038d257805160ff191683800117855562003903565b8280016001018555821562003903579182015b8281111562003902578251825591602001919060010190620038e5565b5b50905062003912919062003927565b5090565b604051610f9e806200395083390190565b6200394c91905b80821115620039485760008160009055506001016200392e565b5090565b90560060806040523480156200001157600080fd5b5060405162000f9e38038062000f9e833981018060405281019080805190602001909291908051820192919060200180518201929190602001805182019291905050508260008090505b8151811015620000e257600160008084848151811015156200007957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200005b565b8160019080519060200190620000fa9291906200017a565b50505083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600390805190602001906200015692919062000209565b5080600490805190602001906200016f92919062000209565b5050505050620002fe565b828054828255906000526020600020908101928215620001f6579160200282015b82811115620001f55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200019b565b5b50905062000205919062000290565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024c57805160ff19168380011785556200027d565b828001600101855582156200027d579182015b828111156200027c5782518255916020019190600101906200025f565b5b5090506200028c9190620002d6565b5090565b620002d391905b80821115620002cf57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010162000297565b5090565b90565b620002fb91905b80821115620002f7576000816000905550600101620002dd565b5090565b90565b610c90806200030e6000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fe4e9e8146100a957806314bfd6d01461014f5780631aae2531146101bc57806324d7806c1461023d57806331ae450b146102985780633c6bb4361461030457806370480275146103945780639b93f06b146103d7578063ce26e78a14610402578063e1b2e8b314610492575b600080fd5b3480156100b557600080fd5b506100d4600480360381019080803590602001909291905050506104d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061017a60048036038101908080359060200190929190505050610590565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c857600080fd5b50610223600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105ce565b604051808215151515815260200191505060405180910390f35b34801561024957600080fd5b5061027e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad6106a6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f05780820151818401526020810190506102d5565b505050509050019250505060405180910390f35b34801561031057600080fd5b50610319610734565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035957808201518184015260208101905061033e565b50505050905090810190601f1680156103865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a057600080fd5b506103d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d2565b005b3480156103e357600080fd5b506103ec610940565b6040518082815260200191505060405180910390f35b34801561040e57600080fd5b5061041761094d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045757808201518184015260208101905061043c565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049e57600080fd5b506104d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109eb565b005b6005818154811015156104e457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105885780601f1061055d57610100808354040283529160200191610588565b820191906000526020600020905b81548152906001019060200180831161056b57829003601f168201915b505050505081565b60018181548110151561059f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561062757600080fd5b6005829080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190610664929190610bbf565b5050816004908051906020019061067c929190610bbf565b5060019050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b6060600180548060200260200160405190810160405280929190818152602001828054801561072a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e0575b5050505050905090565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b505050505081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561082957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561088057600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600580549050905090565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b505050505081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a4457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a9b57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600180549050811015610bbb57600181815481101515610b1357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bae57600181815481101515610b8057fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050610af7565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0057805160ff1916838001178555610c2e565b82800160010185558215610c2e579182015b82811115610c2d578251825591602001919060010190610c12565b5b509050610c3b9190610c3f565b5090565b610c6191905b80821115610c5d576000816000905550600101610c45565b5090565b905600a165627a7a72305820eba6ee76ee3bbfa02ec2da24c1c30f52fc70ed8ef07384f90c3bdca8114fcb070029a165627a7a7230582001987c0b8d6fb55c9b1c3315f07a0308a192552761c6531ede9ce5b55f6a0f750029",
  "sourceMap": "122:1410:1:-;;;276:349;8:9:-1;5:2;;;30:1;27;20:12;5:2;276:349:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:6;375:9;386:12;450:9:0;461:13;608:9:5;627:4;588:12;571:6:11;578:1;571:8;;566:91;585:12;:19;581:1;:23;566:91;;;646:4;621:7;:24;629:12;642:1;629:15;;;;;;;;;;;;;;;;;;621:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;606:3;;;;;;;566:91;;;670:12;663:6;:19;;;;;;;;;;;;:::i;:::-;;495:192;;453:4:18;433:7;:19;441:10;433:19;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;973:3:19;963:6;:13;;;;955:22;;;;;;;;995:6;987:5;;:14;;;;;;;;;;;;;;;;;;1020:9;1011:8;;:18;;;;;;;;;;;;;;;;;;1047:12;1039:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;1085:4;1069:7;:15;1077:6;1069:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;1127:4;1099:7;:27;1115:9;1099:27;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;882:307;;653:9:5;644:8;;:18;;;;;;;;;;;;;;;;;;497:172;;361:123:0;;428:5:1;423:4;:10;;;;;;;;;;;;:::i;:::-;;453:1;446:8;;441:99;460:12;:19;456:1;:23;441:99;;;496:25;505:12;518:1;505:15;;;;;;;;;;;;;;;;;;496:8;;;:25;;;:::i;:::-;481:3;;;;;;;441:99;;;548:28;565:9;548:8;;;:28;;;:::i;:::-;584:23;601:4;584:8;;;:23;;;:::i;:::-;276:349;;;;122:1410;;621:132:18;577:7;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;698:7;:19;706:10;698:19;;;;;;;;;;;;;;;;;;;;;;;;;690:28;;;;;;;;744:4;728:7;:15;736:6;728:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;621:132;:::o;122:1410:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "122:1410:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:23:19;4985:10;4973:11;:23::i;:::-;122:1410:1;4615:153:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4615:153:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;822:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;822:54:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:136:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;757:136:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;2902:653:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:653:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;571:29:19;;;;;;;;;;;;;;;;;;;;;;;1194:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1194:141:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:40:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:40:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238::18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:40:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:106:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1308:106:11;;;;;;;;;;;;;;;;;188:18:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;188:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;188:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:249:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1340:249:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4481:129:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4481:129:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:49:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;279:49:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:924:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;4030:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4030:105:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:90:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:90:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2790:104:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2790:104:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;631:513:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:158:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;844:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:132:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;621:132:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:93:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;490:93:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;490:93:0;;;;;;;;;;;;;;;;;546:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;546:20:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;605:45:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;1150:375:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1150:375:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:256:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:256:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:127:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;587:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;210:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:18:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;523:18:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:22:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:22:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4184:292:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4184:292:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:296:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1008:296:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:799:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:44:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;310:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:96:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;767:96:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;767:96:5;;;;;;;;;;;;;;;;;498:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:20:19;;;;;;;;;;;;;;;;;;;;;;;;;;;4773:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4773:140:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4773:140:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:309;3642:12;3634:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;3756:29;3775:9;3756:14;;:18;;:29;;;;:::i;:::-;3741:14;:44;;;;3563:309;:::o;4615:153::-;4696:4;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;4722:40:19;4750:3;4740:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4740:14:19;;;;;;;;;;;;;;;;4756:5;4722:17;:40::i;:::-;4715:47;;4615:153;;;;:::o;469:24::-;;;;;;;;;;;;;:::o;822:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;351:23:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;757:136:18:-;577:7;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;837:7;:19;845:10;837:19;;;;;;;;;;;;;;;;;;;;;;;;;829:28;;;;;;;;883:5;867:7;:15;875:6;867:15;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;757:136;:::o;2902:653:19:-;2961:7;2996:19;2986:29;;;;;;;;:6;;;;;;;;;;;:29;;;;;;;;;2982:536;;;3029:21;;;;;2982:536;3078:16;3068:26;;;;;;;;:6;;;;;;;;;;;:26;;;;;;;;;3064:454;;;3108:18;;;;;3064:454;3154:15;3144:25;;;;;;;;:6;;;;;;;;;;;:25;;;;;;;;;3140:378;;;3183:17;;;;;3140:378;3228:18;3218:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;3214:304;;;3260:20;;;;;3214:304;3308:21;3298:31;;;;;;;;:6;;;;;;;;;;;:31;;;;;;;;;3294:224;;;3343:23;;;;;3294:224;3394:14;3384:24;;;;;;;;:6;;;;;;;;;;;:24;;;;;;;;;3380:138;;;3422:16;;;;;3380:138;3466:18;3456:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;3452:66;;;3498:20;;;;;3452:66;3528:20;;;2902:653;;:::o;571:29::-;;;;:::o;1194:141::-;1272:7;1300:12;:22;1313:8;1300:22;;;;;;;;;;;;;;;:29;;;;1293:36;;1194:141;;;:::o;307:40:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;238::18:-;;;;;;;;;;;;;;;;;;;;;;:::o;1308:106:11:-;1358:9;1403:6;1396:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:106;:::o;188:18:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1340:249:19:-;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;1450:12:19;1441:21;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;1433:30;;;;;;;;1473:11;:20;;:28;1494:6;1473:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1473:28:19;1511:12;:27;1532:4;1511:27;;;;;;;;;;;;;;;1544:38;;;;;;;;;1556:11;1544:38;;;;;;1568:3;1544:38;;;;1572:6;1544:38;;;;1580:1;1544:38;;;1511:72;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1511:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:249;;:::o;4481:129::-;4566:6;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;4595:3:19;:9;4599:4;4595:9;;;;;;;;;;;;;;;;;4588:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:129;;;:::o;279:49:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;1858:924:19:-;1945:7;1936:6;;:16;;;;;;;;;;;;;;;;;;;;;;;;2002:1;1991:7;1983:16;;;;;;;;:20;1979:366;;;2023:8;;;;;;;;;;;:21;;;2051:9;2062:4;2068:10;2080:24;2023:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:82:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2023:82:19;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2023:82:19;;;;;;;;;;;;;;;;;2129:11;2123:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;1979:366;;;2196:8;;;;;;;;;;;:21;;;2224:9;2235:4;2241:10;2253:23;2196:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2196:81:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2196:81:19;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2196:81:19;;;;;;;;;;;;;;;;;2301:12;2295:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1979:366;2358:21;2371:7;2358:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:29;2452:9;2433:14;;:18;;:29;;;;:::i;:::-;2418:14;:44;;;;2480:12;:27;2501:4;2480:27;;;;;;;;;;;;;;;2513:40;;;;;;;;;2525:10;2513:40;;;;;;2536:3;2513:40;;;;2540:9;2513:40;;;;2551:1;2513:40;;;2480:74;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2480:74:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:924;:::o;4030:105::-;4089:7;4125:3;4115:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4115:14:19;;;;;;;;;;;;;;;;4108:21;;4030:105;;;:::o;673:90:5:-;723:8;750;;;;;;;;;;;743:15;;673:90;:::o;2790:104:19:-;2842:6;2879;;;;;;;;;;;2872:13;;2790:104;:::o;631:513:1:-;712:4;738:15;756:14;764:5;756:7;:14::i;:::-;738:32;;801:3;783:14;791:5;783:7;:14::i;:::-;:21;;;779:142;;;833:5;852;833:26;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;833:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:5;873:8;:17;882:7;873:17;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;779:142;931:8;;;;;;;;;;;:21;;;959:9;974:4;989:5;997:23;931:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;931:90:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;931:90:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;931:90:1;;;;;;;;;;;;;;;;;1128:4;1121:11;;631:513;;;;;:::o;844:158:11:-;806:7;:19;814:10;806:19;;;;;;;;;;;;;;;;;;;;;;;;;798:28;;;;;;;;920:7;:19;928:10;920:19;;;;;;;;;;;;;;;;;;;;;;;;;912:28;;;;;;;;965:4;950:7;:14;958:5;950:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;979:6;991:5;979:18;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;979:18:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:158;:::o;621:132:18:-;577:7;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;698:7;:19;706:10;698:19;;;;;;;;;;;;;;;;;;;;;;;;;690:28;;;;;;;;744:4;728:7;:15;736:6;728:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;621:132;:::o;490:93:0:-;541:9;573:5;566:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:93;:::o;546:20:19:-;;;;;;;;;;;;;:::o;605:45::-;;;;;;;;;;;;;;;;;:::o;1150:375:1:-;1209:7;1321:15;1261:1;1245:5;1239:19;:23;1235:247;;;1283:4;1276:11;;;;1235:247;1337:14;1345:5;1337:7;:14::i;:::-;1321:30;;1407:1;1378:31;;:8;:17;1387:7;1378:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;;1374:100;;;1444:8;:17;1453:7;1444:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1437:24;;;;1374:100;1510:3;1503:10;;1150:375;;;;;:::o;1594:256:19:-;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;1701:12:19;1692:21;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;1684:30;;;;;;;;1724:8;;;;;;;;;;;:17;;;1742:11;1755:6;1724:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1724:38:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1724:38:19;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1724:38:19;;;;;;;;;;;;;;;;;1772:12;:27;1793:4;1772:27;;;;;;;;;;;;;;;1805:38;;;;;;;;;1817:11;1805:38;;;;;;1829:3;1805:38;;;;1833:6;1805:38;;;;1841:1;1805:38;;;1772:72;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1772:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:256;;:::o;587:127:0:-;651:4;806:7:11;:19;814:10;806:19;;;;;;;;;;;;;;;;;;;;;;;;;798:28;;;;;;;;679:5:0;674:4;:10;;;;;;;;;;;;:::i;:::-;;699:4;692:11;;587:127;;;:::o;210:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;523:18:19:-;;;;;;;;;;;;;:::o;253:22:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4184:292:19:-;4274:4;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;4444:5:19;4432:3;:9;4436:4;4432:9;;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;:::i;:::-;;4466:4;4459:11;;4184:292;;;;:::o;1008:296:11:-;1151:6;806:7;:19;814:10;806:19;;;;;;;;;;;;;;;;;;;;;;;;;798:28;;;;;;;;1085:7;:19;1093:10;1085:19;;;;;;;;;;;;;;;;;;;;;;;;;1077:28;;;;;;;;1131:5;1115:7;:15;1123:6;1115:15;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1158:1;1151:8;;1146:135;1165:6;:13;;;;1161:1;:17;1146:135;;;1211:6;1218:1;1211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:17;;:6;:17;;;1199:72;;;1247:6;1254:1;1247:9;;;;;;;;;;;;;;;;;;1240:16;;;;;;;;;;;1199:72;1180:3;;;;;;;1146:135;;;1008:296;;:::o;870:799:5:-;951:7;973:15;1073:25;989:13;997:4;989:7;:13::i;:::-;973:29;;1055:1;1022:35;;:12;:21;1035:7;1022:21;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;1018:362;;;1099:6;1073:32;;1119:7;1140:4;1119:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1119:27:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:7;1173:10;1160:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1160:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:8;;;;;;;;;;;1243:6;1251:4;1257;1220:42;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1220:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1220:42:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1220:42:5;1198:12;:21;1211:7;1198:21;;;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;1276:4;1286:12;:21;1299:7;1286:21;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1276:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:362;;;1337:12;:21;1350:7;1337:21;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;1366:4;1337:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1337:34:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1337:34:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1337:34:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1337:34:5;;;;;;;;;;;;;;;;;1018:362;1395:8;;;;;;;;;;;:21;;;1423:9;1438:4;1453:12;:21;1466:7;1453:21;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:25;1395:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1395:108:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1395:108:5;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1395:108:5;;;;;;;;;;;;;;;;;1640:12;:21;1653:7;1640:21;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:37;;870:799;;;;;;:::o;310:44:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;767:96:5:-;821:10;854:4;847:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;767:96;:::o;498:20:19:-;;;;;;;;;;;;;:::o;4773:140::-;4849:6;577:7:18;:19;585:10;577:19;;;;;;;;;;;;;;;;;;;;;;;;;569:28;;;;;;;;4877:30:19;4902:3;4892:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4892:14:19;;;;;;;;;;;;;;;;4877;:30::i;:::-;4870:37;;4773:140;;;:::o;1008:129:17:-;1066:7;1081:9;1097:1;1093;:5;1081:17;;1116:1;1111;:6;;1104:14;;;;;;1131:1;1124:8;;1008:129;;;;;:::o;122:1410:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18; //We have to specify what version of the compiler this code will use\n\nimport \"./Catalogue.sol\";\n\ncontract GraphNode is Catalogue {\n\n  //event NewCatalogue(address indexed user, address indexed parentNode, address indexed childNode, string href);\n  \n  function GraphNode(SmartKey _smartKey, address[] adminAddress, string _href) \n  public\n  Catalogue(_smartKey, adminAddress)\n  {      \n      \n      href=_href;\n      for (uint i=0; i < adminAddress.length; i++) {\n        addOwner(adminAddress[i]);\n         \n      } \n      addOwner(address(_smartKey));\n      addOwner(address(this));\n      \n     \n  }\n  \n  function upsertItem(GraphNode _node, string _href)\n  public\n  payable\n  returns (bool)\n  {  \n\n      \n      bytes32 hashVal = getHash(_href);\n\n      if (getItem(_href) == 0x0)\n      {\n      \n            items.push(address(_node));\n            nodeData[hashVal]=address(_node);\n      \n      }\n  \n      smartKey.loadSmartKey.value(msg.value)(Key(this), address(_node), bytes32(\"NewCatalogue\"));\n      \n      //NewCatalogue(msg.sender, address(this), address(_node), _href);\n            \n      return true;\n      \n  }\n  \n  function getItem(string _href) \n  public\n  view\n  returns (address) \n  {      \n      if (bytes(_href).length < 1) {\n          return this;\n      } else {\n      \n          bytes32 hashVal=getHash(_href);\n          \n          if (nodeData[hashVal] != address(0)) \n          {\n             return nodeData[hashVal];\n          }\n      }      \n\n      \n      return 0x0;\n      \n  }\n   \n\n}\n\n",
  "sourcePath": "/home/ubuntu/iotblock/contracts/GraphNode.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/iotblock/contracts/GraphNode.sol",
    "exportedSymbols": {
      "GraphNode": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 54,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/ubuntu/iotblock/contracts/Catalogue.sol",
        "file": "./Catalogue.sol",
        "id": 55,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 53,
        "src": "95:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "Catalogue",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 52,
              "src": "144:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Catalogue_$52",
                "typeString": "contract Catalogue"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "144:9:1"
          }
        ],
        "contractDependencies": [
          52,
          502,
          1634,
          2386,
          2836
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208,
          52,
          502,
          2836,
          2386,
          1634
        ],
        "name": "GraphNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "402:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "href",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "423:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_href",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "428:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "423:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "423:10:1"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "486:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 87,
                                "name": "adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "505:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 89,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 88,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "518:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "505:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "addOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "496:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "496:25:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "456:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "adminAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "460:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "460:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "456:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "initializationExpression": {
                    "assignments": [
                      76
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 76,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "446:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 78,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "453:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "446:8:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "481:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "481:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 85,
                    "nodeType": "ExpressionStatement",
                    "src": "481:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "441:99:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "_smartKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "565:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "557:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "557:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 94,
                      "name": "addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "548:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "548:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5013,
                            "src": "601:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100,
                      "name": "addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "584:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "584:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 67,
                    "name": "_smartKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "375:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 68,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "386:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 69,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 66,
                  "name": "Catalogue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 52,
                  "src": "365:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Catalogue_$52_$",
                    "typeString": "type(contract Catalogue)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:34:1"
              }
            ],
            "name": "GraphNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "295:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1138",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 58,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1138,
                    "src": "295:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "315:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "315:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "315:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "339:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "294:58:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:1"
            },
            "scope": 208,
            "src": "276:349:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "720:424:1",
              "statements": [
                {
                  "assignments": [
                    117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 117,
                      "name": "hashVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "738:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "764:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 118,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2753,
                      "src": "756:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:32:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_href",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "791:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 122,
                        "name": "getItem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "783:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) view returns (address)"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "783:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "801:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x0"
                    },
                    "src": "783:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 144,
                  "nodeType": "IfStatement",
                  "src": "779:142:1",
                  "trueBody": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "812:109:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "_node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "852:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                ],
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "844:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "844:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "833:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "833:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "833:26:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "nodeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "873:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 137,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "hashVal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "882:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "873:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "899:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "891:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "891:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "873:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "873:32:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5013,
                            "src": "974:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 153,
                          "name": "Key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2836,
                          "src": "970:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Key_$2836_$",
                            "typeString": "type(contract Key)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Key_$2836",
                          "typeString": "contract Key"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "989:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "981:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "4e6577436174616c6f677565",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1005:14:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_155b1bf4011eb9033e4bb7c81686245fc648ad9870729ba5ea5dabe6ab4aa06d",
                              "typeString": "literal_string \"NewCatalogue\""
                            },
                            "value": "NewCatalogue"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_155b1bf4011eb9033e4bb7c81686245fc648ad9870729ba5ea5dabe6ab4aa06d",
                              "typeString": "literal_string \"NewCatalogue\""
                            }
                          ],
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "997:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "997:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Key_$2836",
                          "typeString": "contract Key"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4974,
                            "src": "959:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "959:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 145,
                            "name": "smartKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "931:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loadSmartKey",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 932,
                          "src": "931:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (contract Key,address,bytes32) payable external returns (bool)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "931:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract Key,address,bytes32) payable external returns (bool))"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "931:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$value",
                        "typeString": "function (contract Key,address,bytes32) payable external returns (bool)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "931:90:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1128:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 115,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "1121:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 167,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "651:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 108,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "651:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "668:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:31:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "712:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "711:6:1"
            },
            "scope": 208,
            "src": "631:513:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "1221:304:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "_href",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1245:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1239:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1239:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1239:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1261:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1239:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "1302:180:1",
                    "statements": [
                      {
                        "assignments": [
                          184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 184,
                            "name": "hashVal",
                            "nodeType": "VariableDeclaration",
                            "scope": 207,
                            "src": "1321:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1321:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 188,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 186,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "1345:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 185,
                            "name": "getHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2753,
                            "src": "1337:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1337:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1321:30:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 189,
                              "name": "nodeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1378:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 191,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "hashVal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "1387:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1378:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1407:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1399:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1399:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1378:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 201,
                        "nodeType": "IfStatement",
                        "src": "1374:100:1",
                        "trueBody": {
                          "id": 200,
                          "nodeType": "Block",
                          "src": "1422:52:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 196,
                                  "name": "nodeData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1444:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                    "typeString": "mapping(bytes32 => address)"
                                  }
                                },
                                "id": 198,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 197,
                                  "name": "hashVal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 184,
                                  "src": "1453:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1444:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 173,
                              "id": 199,
                              "nodeType": "Return",
                              "src": "1437:24:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 203,
                  "nodeType": "IfStatement",
                  "src": "1235:247:1",
                  "trueBody": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "1264:32:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5013,
                          "src": "1283:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GraphNode_$208",
                            "typeString": "contract GraphNode"
                          }
                        },
                        "functionReturnParameters": 173,
                        "id": 181,
                        "nodeType": "Return",
                        "src": "1276:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307830",
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1510:3:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 173,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "1503:10:1"
                }
              ]
            },
            "documentation": null,
            "id": 207,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1167:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:14:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1209:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1208:9:1"
            },
            "scope": 208,
            "src": "1150:375:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "122:1410:1"
      }
    ],
    "src": "0:1534:1"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/iotblock/contracts/GraphNode.sol",
    "exportedSymbols": {
      "GraphNode": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 54,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/home/ubuntu/iotblock/contracts/Catalogue.sol",
        "file": "./Catalogue.sol",
        "id": 55,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 53,
        "src": "95:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "Catalogue",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 52,
              "src": "144:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Catalogue_$52",
                "typeString": "contract Catalogue"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "144:9:1"
          }
        ],
        "contractDependencies": [
          52,
          502,
          1634,
          2386,
          2836
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208,
          52,
          502,
          2836,
          2386,
          1634
        ],
        "name": "GraphNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "402:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 71,
                      "name": "href",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "423:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 72,
                      "name": "_href",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "428:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "423:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "423:10:1"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "486:54:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 87,
                                "name": "adminAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 62,
                                "src": "505:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 89,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 88,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "518:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "505:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "addOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2364,
                            "src": "496:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "496:25:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "456:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "adminAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "460:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "460:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "456:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "initializationExpression": {
                    "assignments": [
                      76
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 76,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "446:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 78,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "453:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "446:8:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "481:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "481:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 85,
                    "nodeType": "ExpressionStatement",
                    "src": "481:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "441:99:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "_smartKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "565:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          ],
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "557:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "557:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 94,
                      "name": "addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "548:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "548:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 102,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5013,
                            "src": "601:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "593:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "593:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 100,
                      "name": "addOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "584:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "584:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 107,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 67,
                    "name": "_smartKey",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "375:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 68,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "386:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 69,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 66,
                  "name": "Catalogue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 52,
                  "src": "365:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Catalogue_$52_$",
                    "typeString": "type(contract Catalogue)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:34:1"
              }
            ],
            "name": "GraphNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "295:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1138",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 58,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1138,
                    "src": "295:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "315:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "315:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "315:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "339:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "294:58:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:1"
            },
            "scope": 208,
            "src": "276:349:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "720:424:1",
              "statements": [
                {
                  "assignments": [
                    117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 117,
                      "name": "hashVal",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "738:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 121,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "764:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 118,
                      "name": "getHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2753,
                      "src": "756:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:32:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 123,
                          "name": "_href",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "791:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 122,
                        "name": "getItem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "783:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) view returns (address)"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "783:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830",
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "801:3:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x0"
                    },
                    "src": "783:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 144,
                  "nodeType": "IfStatement",
                  "src": "779:142:1",
                  "trueBody": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "812:109:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "_node",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "852:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                ],
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "844:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "844:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "833:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "833:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "833:26:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 135,
                              "name": "nodeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "873:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 137,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 136,
                              "name": "hashVal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "882:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "873:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 139,
                                "name": "_node",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 109,
                                "src": "899:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "891:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "891:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "873:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "873:32:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5013,
                            "src": "974:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 153,
                          "name": "Key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2836,
                          "src": "970:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Key_$2836_$",
                            "typeString": "type(contract Key)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "970:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Key_$2836",
                          "typeString": "contract Key"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "989:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          ],
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "981:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "4e6577436174616c6f677565",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1005:14:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_155b1bf4011eb9033e4bb7c81686245fc648ad9870729ba5ea5dabe6ab4aa06d",
                              "typeString": "literal_string \"NewCatalogue\""
                            },
                            "value": "NewCatalogue"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_155b1bf4011eb9033e4bb7c81686245fc648ad9870729ba5ea5dabe6ab4aa06d",
                              "typeString": "literal_string \"NewCatalogue\""
                            }
                          ],
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "997:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "997:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Key_$2836",
                          "typeString": "contract Key"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4974,
                            "src": "959:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "959:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 145,
                            "name": "smartKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2414,
                            "src": "931:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartKey_$1138",
                              "typeString": "contract SmartKey"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loadSmartKey",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 932,
                          "src": "931:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (contract Key,address,bytes32) payable external returns (bool)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "931:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract Key,address,bytes32) payable external returns (bool))"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "931:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_Key_$2836_$_t_address_$_t_bytes32_$returns$_t_bool_$value",
                        "typeString": "function (contract Key,address,bytes32) payable external returns (bool)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "931:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "931:90:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1128:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 115,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "1121:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 167,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "_node",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "651:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 108,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "651:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "668:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:31:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "712:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "711:6:1"
            },
            "scope": 208,
            "src": "631:513:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "1221:304:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 175,
                            "name": "_href",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1245:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1239:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1239:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1239:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1261:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1239:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "1302:180:1",
                    "statements": [
                      {
                        "assignments": [
                          184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 184,
                            "name": "hashVal",
                            "nodeType": "VariableDeclaration",
                            "scope": 207,
                            "src": "1321:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1321:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 188,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 186,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "1345:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 185,
                            "name": "getHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2753,
                            "src": "1337:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1337:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1321:30:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 189,
                              "name": "nodeData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1378:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 191,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "hashVal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "1387:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1378:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1407:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1399:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1399:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1378:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 201,
                        "nodeType": "IfStatement",
                        "src": "1374:100:1",
                        "trueBody": {
                          "id": 200,
                          "nodeType": "Block",
                          "src": "1422:52:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 196,
                                  "name": "nodeData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1444:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                    "typeString": "mapping(bytes32 => address)"
                                  }
                                },
                                "id": 198,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 197,
                                  "name": "hashVal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 184,
                                  "src": "1453:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1444:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 173,
                              "id": 199,
                              "nodeType": "Return",
                              "src": "1437:24:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 203,
                  "nodeType": "IfStatement",
                  "src": "1235:247:1",
                  "trueBody": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "1264:32:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5013,
                          "src": "1283:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GraphNode_$208",
                            "typeString": "contract GraphNode"
                          }
                        },
                        "functionReturnParameters": 173,
                        "id": 181,
                        "nodeType": "Return",
                        "src": "1276:11:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "307830",
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1510:3:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x0"
                  },
                  "functionReturnParameters": 173,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "1503:10:1"
                }
              ]
            },
            "documentation": null,
            "id": 207,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1167:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:14:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "1209:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1209:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1208:9:1"
            },
            "scope": 208,
            "src": "1150:375:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "122:1410:1"
      }
    ],
    "src": "0:1534:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-29T11:36:52.796Z"
}