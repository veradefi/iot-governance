{
  "contractName": "SmartNode",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmins",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "banned",
          "type": "address"
        }
      ],
      "name": "addBanned",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_graphRoot",
          "type": "address"
        },
        {
          "name": "_smartKey",
          "type": "address"
        },
        {
          "name": "adminAddress",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parentNode",
          "type": "address"
        },
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "upsertItem",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b60405162005ee238038062005ee2833981016040528080519060200190919080519060200190919080518201919050508060008090505b81518110156100ca576001600080848481518110151561006257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050610046565b81600190805190602001906100e092919061016d565b50505081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061023a565b8280548282559060005260206000209081019282156101e6579160200282015b828111156101e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061018d565b5b5090506101f391906101f7565b5090565b61023791905b8082111561023357600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016101fd565b5090565b90565b615c98806200024a6000396000f3006060604052600436106200007f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806314bfd6d0146200008457806324d7806c14620000ea57806331ae450b146200013e57806367d90da214620001ad578063704802751462000238578063e1b2e8b31462000274575b600080fd5b34156200009057600080fd5b620000a86004808035906020019091905050620002b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415620000f657600080fd5b62000124600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050620002f0565b604051808215151515815260200191505060405180910390f35b34156200014a57600080fd5b6200015462000310565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620001995780820151818401526020810190506200017c565b505050509050019250505060405180910390f35b6200021e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620003a8565b604051808215151515815260200191505060405180910390f35b34156200024457600080fd5b62000272600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000b6b565b005b34156200028057600080fd5b620002ae600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000cda565b005b600181815481101515620002c057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b6200031a62000eb7565b60018054806020026020016040519081016040528092919081815260200182805480156200039e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000353575b5050505050905090565b600080620003b562000eb7565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6010fcd856000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200046a5780820151818401526020810190506200044d565b50505050905090810190601f168015620004985780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515620004b757600080fd5b6102c65a03f11515620004c957600080fd5b505050604051805190509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620007bc5760046040518059106200051b5750595b90808252806020026020018201604052509050338160008151811015156200053f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811015156200058c57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505030816002815181101515620005d957fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160038151811015156200064857fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168185620006b362000ecb565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156200072b5780820151818401526020810190506200070e565b50505050905001838103825284818151815260200191508051906020019080838360005b838110156200076c5780820151818401526020810190506200074f565b50505050905090810190601f1680156200079a5780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f0801515620007b957600080fd5b91505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342aa9bba83846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1515620008ad57600080fd5b6102c65a03f11515620008bf57600080fd5b5050508473ffffffffffffffffffffffffffffffffffffffff166367d90da2600234811515620008eb57fe5b0484876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200099657808201518184015260208101905062000979565b50505050905090810190601f168015620009c45780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b1515620009e357600080fd5b6125ee5a03f11515620009f557600080fd5b505050506040518051905050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367d90da260023481151562000a4c57fe5b0484876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000af757808201518184015260208101905062000ada565b50505050905090810190601f16801562000b255780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b151562000b4457600080fd5b6125ee5a03f1151562000b5657600080fd5b50505050604051805190509250505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000bc357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000c1b57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001805480600101828162000c88919062000edc565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000d3457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000d8c57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562000eb35760018181548110151562000e0657fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000ea55760018181548110151562000e7657fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062000de8565b5050565b602060405190810160405280600081525090565b604051614d398062000f3483390190565b81548183558181151162000f065781836000526020600020918201910162000f05919062000f0b565b5b505050565b62000f3091905b8082111562000f2c57600081600090555060010162000f12565b5090565b905600606060405234156200001057600080fd5b60405162004d3938038062004d398339810160405280805190602001909190805182019190602001805182019190505060008383818181308260008090505b8151811015620000d657600160008084848151811015156200006d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200004f565b8160019080519060200190620000ee929190620004d0565b5050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008173ffffffffffffffffffffffffffffffffffffffff16141515156200017057600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460146101000a81548160ff021916908360028111156200021257fe5b02179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505081600b9080519060200190620003269291906200055f565b50600090505b82518110156200037b576200036d83828151811015156200034957fe5b90602001906020020151620003c364010000000002620025ba176401000000009004565b80806001019150506200032c565b6200039a84620003c364010000000002620025ba176401000000009004565b620003b930620003c364010000000002620025ba176401000000009004565b5050505062000654565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200041c57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200047557600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8280548282559060005260206000209081019282156200054c579160200282015b828111156200054b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620004f1565b5b5090506200055b9190620005e6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005a257805160ff1916838001178555620005d3565b82800160010185558215620005d3579182015b82811115620005d2578251825591602001919060010190620005b5565b5b509050620005e291906200062c565b5090565b6200062991905b808211156200062557600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620005ed565b5090565b90565b6200065191905b808211156200064d57600081600090555060010162000633565b5090565b90565b6146d580620006646000396000f300606060405260043610620001ff576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303db428d146200020c578063113adf4914620002c757806314538128146200031f57806314bfd6d014620003b9578063173825d9146200041f5780631801e156146200045b578063202e079d146200048f57806323ca0cd214620004bb57806324d7806c146200050b5780632f54bf6e146200055f57806331ae450b14620005b357806336eeaa6a146200062257806349f9c0e414620006b65780635436e5a014620006fb5780635571edeb14620007a15780635b2ce586146200080b5780635b6beeb914620008285780635c866c7814620008a4578063640e7fd514620008fc57806367d90da214620009375780637048027514620009c25780637065cb4814620009fe57806374ddcd6e1462000a3a5780637633a22c1462000aa9578063779d86771462000ae45780639172fe081462000b34578063b6010fcd1462000b64578063b9d191661462000c04578063bfb231d21462000c7c578063c19d93fb1462000ce2578063cd5cfdaf1462000d1d578063d4c2f75c1462000d83578063e1b2e8b31462000e08578063ec6f214e1462000e44578063f63553b51462000f1b578063f95fd40b1462000f85578063fbfa77cf1462000ff4578063fd08e0c7146200104c575b6200020a3362001128565b005b34156200021857600080fd5b620002ad600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062001276565b604051808215151515815260200191505060405180910390f35b3415620002d357600080fd5b620002dd62001349565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200032b57600080fd5b62000362600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506200136f565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b3415620003c557600080fd5b620003dd6004808035906020019091905050620013dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200042b57600080fd5b62000459600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506200141c565b005b34156200046757600080fd5b6200047162001529565b60405180826000191660001916815260200191505060405180910390f35b34156200049b57600080fd5b620004a5620017c6565b6040518082815260200191505060405180910390f35b3415620004c757600080fd5b620004f5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050620017cc565b6040518082815260200191505060405180910390f35b34156200051757600080fd5b62000545600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001818565b604051808215151515815260200191505060405180910390f35b34156200056b57600080fd5b62000599600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001838565b604051808215151515815260200191505060405180910390f35b3415620005bf57600080fd5b620005c962001858565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200060e578082015181840152602081019050620005f1565b505050509050019250505060405180910390f35b34156200062e57600080fd5b62000638620018f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200067a5780820151818401526020810190506200065d565b50505050905090810190601f168015620006a85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415620006c257600080fd5b620006f9600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001992565b005b34156200070757600080fd5b6200072360048080356000191690602001909190505062001b70565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200076557808201518184015260208101905062000748565b50505050905090810190601f168015620007935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415620007ad57600080fd5b620007c960048080356000191690602001909190505062001c92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000826600480803560ff1690602001909190505062001cc5565b005b34156200083457600080fd5b62000886600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506200214f565b60405180826000191660001916815260200191505060405180910390f35b3415620008b057600080fd5b620008ba620021bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200090857600080fd5b62000912620021e7565b604051808260068111156200092357fe5b60ff16815260200191505060405180910390f35b620009a8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620021fe565b604051808215151515815260200191505060405180910390f35b3415620009ce57600080fd5b620009fc600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506200244b565b005b341562000a0a57600080fd5b62000a38600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050620025ba565b005b341562000a4657600080fd5b62000a50620026c7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000a9557808201518184015260208101905062000a78565b505050509050019250505060405180910390f35b341562000ab557600080fd5b62000abf6200275f565b6040518082600681111562000ad057fe5b60ff16815260200191505060405180910390f35b341562000af057600080fd5b62000b1e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062002772565b6040518082815260200191505060405180910390f35b62000b62600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001128565b005b341562000b7057600080fd5b62000bc2600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506200278a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000c1057600080fd5b62000c62600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506200286f565b604051808215151515815260200191505060405180910390f35b341562000c8857600080fd5b62000ca06004808035906020019091905050620028eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000cee57600080fd5b62000cf86200292b565b6040518082600281111562000d0957fe5b60ff16815260200191505060405180910390f35b341562000d2957600080fd5b62000d4160048080359060200190919050506200293e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000d8f57600080fd5b62000dee60048080356000191690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506200297e565b604051808215151515815260200191505060405180910390f35b341562000e1457600080fd5b62000e42600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062002a15565b005b62000ed9600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062002bf2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000f2757600080fd5b62000f43600480803560001916906020019091905050620032e0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000f9157600080fd5b62000f9b62003313565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000fe057808201518184015260208101905062000fc3565b505050509050019250505060405180910390f35b34156200100057600080fd5b6200100a620033ab565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200105857600080fd5b620010aa600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620033d1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620010ec578082015181840152602081019050620010cf565b50505050905090810190601f1680156200111a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600460146101000a81548160ff021916908360028111156200114857fe5b02179055506200116434600554620034aa90919063ffffffff16565b600581905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281620011bd9190620034c9565b916000526020600020906004020160006080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020013481526020016000815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620012d157600080fd5b62001341836040518082805190602001908083835b6020831015156200130d5780518252602082019150602081019050602083039250620012e6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020836200297e565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020818154811015156200138b57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600181815481101515620013ec57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200147557600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620014ce57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060068111156200153857fe5b600460159054906101000a900460ff1660068111156200155457fe5b141562001584577f50726f766973696f6e696e6700000000000000000000000000000000000000009050620017c3565b600160068111156200159257fe5b600460159054906101000a900460ff166006811115620015ae57fe5b1415620015de577f43657274696669656400000000000000000000000000000000000000000000009050620017c3565b60026006811115620015ec57fe5b600460159054906101000a900460ff1660068111156200160857fe5b141562001638577f4d6f6469666965640000000000000000000000000000000000000000000000009050620017c3565b600360068111156200164657fe5b600460159054906101000a900460ff1660068111156200166257fe5b141562001692577f436f6d70726f6d697365640000000000000000000000000000000000000000009050620017c3565b60046006811115620016a057fe5b600460159054906101000a900460ff166006811115620016bc57fe5b1415620016ec577f4d616c66756e6374696f6e696e670000000000000000000000000000000000009050620017c3565b60056006811115620016fa57fe5b600460159054906101000a900460ff1660068111156200171657fe5b141562001746577f4861726d66756c000000000000000000000000000000000000000000000000009050620017c3565b6006808111156200175357fe5b600460159054906101000a900460ff1660068111156200176f57fe5b14156200179f577f436f756e746572666569740000000000000000000000000000000000000000009050620017c3565b7f436f756e7465726665697400000000000000000000000000000000000000000090505b90565b60055481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b62001862620034fe565b6001805480602002602001604051908101604052809291908181526020018280548015620018e657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200189b575b5050505050905090565b600b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200198a5780601f106200195e576101008083540402835291602001916200198a565b820191906000526020600020905b8154815290600101906020018083116200196c57829003601f168201915b505050505081565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620019eb57600080fd5b60016002811115620019f957fe5b600460149054906101000a900460ff16600281111562001a1557fe5b14151562001a2257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151562001a6357600080fd5b600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480600101828162001ab69190620034c9565b916000526020600020906004020160006080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020016001815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b62001b7a62003512565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001bd357600080fd5b6008600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001c865780601f1062001c5a5761010080835404028352916020019162001c86565b820191906000526020600020905b81548152906001019060200180831162001c6857829003601f168201915b50505050509050919050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460156101000a81548160ff0219169083600681111562001ce457fe5b0217905550600181600681111562001cf857fe5b111562001e7257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c74685761726e696e67000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b151562001e2957600080fd5b6125ee5a03f1151562001e3b57600080fd5b5050505060405180519050506002600460146101000a81548160ff0219169083600281111562001e6757fe5b021790555062001fe0565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c746855706461746500000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b151562001f9c57600080fd5b6125ee5a03f1151562001fae57600080fd5b5050505060405180519050506001600460146101000a81548160ff0219169083600281111562001fda57fe5b02179055505b7fb6d7372bb54b80a5b1d60d3b1da737719783cc92a2095f10d9195105f7abeca581604051808260068111156200201357fe5b60ff16815260200191505060405180910390a16200203d34600554620034aa90919063ffffffff16565b600581905550600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281620020969190620034c9565b916000526020600020906004020160006080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020013481526020016000815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505050565b6000816040518082805190602001908083835b60208310151562002189578051825260208201915060208101905060208303925062002162565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460159054906101000a900460ff16905090565b6000806200220c836200214f565b905060006200221b846200278a565b73ffffffffffffffffffffffffffffffffffffffff161415620022f857600c80548060010182816200224e919062003526565b9160005260206000209001600086909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600d6000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430877f4e6577436174616c6f67756500000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b15156200242257600080fd5b6125ee5a03f115156200243457600080fd5b505050506040518051905050600191505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620024a357600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620024fb57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001805480600101828162002568919062003526565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200261357600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200266c57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b620026d1620034fe565b600c8054806020026020016040519081016040528092919081815260200182805480156200275557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200270a575b5050505050905090565b600460159054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b600080600183511015620027a15730915062002869565b620027ac836200214f565b9050600073ffffffffffffffffffffffffffffffffffffffff16600d6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200286457600d6000826000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915062002869565b600091505b50919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620028c957600080fd5b81600b9080519060200190620028e192919062003555565b5060019050919050565b600c81815481101515620028fb57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b6009818154811015156200294e57fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620029d957600080fd5b81600860008560001916600019168152602001908152602001600020908051906020019062002a0a92919062003555565b506001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002a6f57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002ac757600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562002bee5760018181548110151562002b4157fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562002be05760018181548110151562002bb157fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062002b23565b5050565b600080600062002c02856200214f565b9150600073ffffffffffffffffffffffffffffffffffffffff16600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562003019576001905080805480600101828162002c8e919062003526565b9160005260206000209001600030909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080805480600101828162002cf2919062003526565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001868662002d72620035dc565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818154815260200191508054801562002e2657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002ddb575b5050848103835286818151815260200191508051906020019080838360005b8381101562002e6257808201518184015260208101905062002e45565b50505050905090810190601f16801562002e905780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101562002ecb57808201518184015260208101905062002eae565b50505050905090810190601f16801562002ef95780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f080151562002f1a57600080fd5b600a6000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009805480600101828162002f899190620035ed565b91600052602060002090016000600a6000866000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062003152565b600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631aae2531856000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620030e7578082015181840152602081019050620030ca565b50505050905090810190601f168015620031155780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15156200313457600080fd5b6102c65a03f115156200314657600080fd5b50505060405180519050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4d657461446174615570646174650000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b15156200327c57600080fd5b6125ee5a03f115156200328e57600080fd5b505050506040518051905050600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250505092915050565b600d6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200331d6200361c565b6009805480602002602001604051908101604052809291908181526020018280548015620033a157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003356575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620033db62003512565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200343457600080fd5b620034a3826040518082805190602001908083835b60208310151562003470578051825260208201915060208101905060208303925062003449565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902062001b70565b9050919050565b6000808284019050838110151515620034bf57fe5b8091505092915050565b815481835581811511620034f957600402816004028360005260206000209182019101620034f8919062003630565b5b505050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b81548183558181151162003550578183600052602060002091820191016200354f919062003691565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200359857805160ff1916838001178555620035c9565b82800160010185558215620035c9579182015b82811115620035c8578251825591602001919060010190620035ab565b5b509050620035d8919062003691565b5090565b604051610ff080620036ba83390190565b815481835581811511620036175781836000526020600020918201910162003616919062003691565b5b505050565b602060405190810160405280600081525090565b6200368e91905b808211156200368a57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090555060040162003637565b5090565b90565b620036b691905b80821115620036b257600081600090555060010162003698565b5090565b905600606060405234156200001057600080fd5b60405162000ff038038062000ff0833981016040528080519060200190919080518201919060200180518201919060200180518201919050508260008090505b8151811015620000d757600160008084848151811015156200006e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505062000050565b8160019080519060200190620000ef9291906200016f565b50505083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600390805190602001906200014b929190620001fe565b50806004908051906020019062000164929190620001fe565b5050505050620002f3565b828054828255906000526020600020908101928215620001eb579160200282015b82811115620001ea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000190565b5b509050620001fa919062000285565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024157805160ff191683800117855562000272565b8280016001018555821562000272579182015b828111156200027157825182559160200191906001019062000254565b5b509050620002819190620002cb565b5090565b620002c891905b80821115620002c457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016200028c565b5090565b90565b620002f091905b80821115620002ec576000816000905550600101620002d2565b5090565b90565b610ced80620003036000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fe4e9e81461009e57806314bfd6d01461013a5780631aae25311461019d57806324d7806c1461021257806331ae450b146102635780633c6bb436146102cd578063704802751461035b578063ce26e78a14610394578063e1b2e8b314610422575b600080fd5b34156100a957600080fd5b6100bf600480803590602001909190505061045b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ff5780820151818401526020810190506100e4565b50505050905090810190601f16801561012c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014557600080fd5b61015b6004808035906020019091905050610517565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101a857600080fd5b6101f8600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610556565b604051808215151515815260200191505060405180910390f35b341561021d57600080fd5b610249600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061060b565b604051808215151515815260200191505060405180910390f35b341561026e57600080fd5b61027661062b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102b957808201518184015260208101905061029e565b505050509050019250505060405180910390f35b34156102d857600080fd5b6102e06106bf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610320578082015181840152602081019050610305565b50505050905090810190601f16801561034d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561036657600080fd5b610392600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061075d565b005b341561039f57600080fd5b6103a76108c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e75780820151818401526020810190506103cc565b50505050905090810190601f1680156104145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561042d57600080fd5b610459600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610966565b005b60058181548110151561046a57fe5b90600052602060002090016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b505050505081565b60018181548110151561052657fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105af57600080fd5b600580548060010182816105c39190610b3c565b9160005260206000209001600084909190915090805190602001906105e9929190610b68565b50508160049080519060200190610601929190610b68565b5060019050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b610633610be8565b60018054806020026020016040519081016040528092919081815260200182805480156106b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161066b575b5050505050905090565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b505050505081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156107b457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561080b57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600180548060010182816108769190610bfc565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b505050505081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156109bf57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a1657600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600180549050811015610b3857600181815481101515610a8e57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b2b57600181815481101515610afc57fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050610a72565b5050565b815481835581811511610b6357818360005260206000209182019101610b629190610c28565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ba957805160ff1916838001178555610bd7565b82800160010185558215610bd7579182015b82811115610bd6578251825591602001919060010190610bbb565b5b509050610be49190610c54565b5090565b602060405190810160405280600081525090565b815481835581811511610c2357818360005260206000209182019101610c229190610c54565b5b505050565b610c5191905b80821115610c4d5760008181610c449190610c79565b50600101610c2e565b5090565b90565b610c7691905b80821115610c72576000816000905550600101610c5a565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610c9f5750610cbe565b601f016020900490600052602060002090810190610cbd9190610c54565b5b505600a165627a7a7230582099873a34347606be02e82cea8e0481561486fdfe3beb1ceadd528d3f7bae2f2e0029a165627a7a723058209656590b7fddd47d9cb26416cede889c0ca3cdb20eb06cc7799c72705799de430029a165627a7a723058204799ff2685754ce4981dcaf8458a8d628ac71decad0d3f16125cf8f375e6d79f0029",
  "deployedBytecode": "",
  "sourceMap": "54:1064:8:-;;;153:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:12;564:6:10;571:1;564:8;;559:91;578:12;:19;574:1;:23;559:91;;;639:4;614:7;:24;622:12;635:1;622:15;;;;;;;;;;;;;;;;;;614:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;599:3;;;;;;;559:91;;;663:12;656:6;:19;;;;;;;;;;;;:::i;:::-;;495:185;;300:9:8;291:8;;:18;;;;;;;;;;;;;;;;;;328:10;318:9;;:20;;;;;;;;;;;;;;;;;;153:190;;;54:1064;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "54:1064:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;350:758:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:158:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;307:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;1301:102::-;1355:9;;:::i;:::-;1392:6;1385:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:102;:::o;350:758:8:-;437:4;460:12;559:24;;:::i;:::-;473:9;;;;;;;;;;;:17;;;491:5;473:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;460:37:8;;527:1;511:18;;:4;:18;;;507:364;;;598:1;584:16;;;;;;;;;;;;;;;;;;;;;;;;559:41;;625:10;614:7;622:1;614:10;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;668:11;649:7;657:1;649:10;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;715:4;696:7;704:1;696:10;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;755:9;;;;;;;;;;;736:7;744:1;736:10;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;821:8;;;;;;;;;;;831:7;840:5;807:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:53:8;;507:364;889:8;;;;;;;;;;;:20;;;920:4;927;889:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:11;:22;;;990:1;980:9;:11;;;;;;;;1003:4;1010:5;951:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:65:8;1033:9;;;;;;;;;;;:20;;;1070:1;1060:9;:11;;;;;;;;1083:4;1090:5;1033:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:70:8;;350:758;;;;;;:::o;837:158:10:-;799:7;:19;807:10;799:19;;;;;;;;;;;;;;;;;;;;;;;;;791:28;;;;;;;;913:7;:19;921:10;913:19;;;;;;;;;;;;;;;;;;;;;;;;;905:28;;;;;;;;958:4;943:7;:14;951:5;943:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;972:6;:18;;;;;;;;;;;:::i;:::-;;;;;;;;;;984:5;972:18;;;;;;;;;;;;;;;;;;;;;;;837:158;:::o;1001:296::-;1144:6;799:7;:19;807:10;799:19;;;;;;;;;;;;;;;;;;;;;;;;;791:28;;;;;;;;1078:7;:19;1086:10;1078:19;;;;;;;;;;;;;;;;;;;;;;;;;1070:28;;;;;;;;1124:5;1108:7;:15;1116:6;1108:15;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1151:1;1144:8;;1139:135;1158:6;:13;;;;1154:1;:17;1139:135;;;1204:6;1211:1;1204:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:17;;:6;:17;;;1192:72;;;1240:6;1247:1;1240:9;;;;;;;;;;;;;;;;;;;1233:16;;;;;;;;;;;1192:72;1173:3;;;;;;;1139:135;;;1001:296;;:::o;54:1064:8:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18; \n\nimport \"./GraphRoot.sol\";\n\ncontract SmartNode is Administered {\n  \n  SmartKey smartKey;\n  GraphRoot graphRoot;\n  \n         \n  function SmartNode(GraphRoot _graphRoot, SmartKey _smartKey, address[] adminAddress) \n    Administered(adminAddress)\n    public\n  {\n      smartKey=_smartKey; \n      graphRoot=_graphRoot;\n  }\n\n  \n  function upsertItem(GraphNode _parentNode, string _href)\n  public\n  payable\n  returns (bool)\n  {\n    \n        address addr=graphRoot.getItem(_href);\n        if (addr == address(0)) { \n            \n            address[] memory _admins=new address[](4);\n            _admins[0]=msg.sender;\n            _admins[1]=address(_parentNode);  \n            _admins[2]=address(this);  \n            _admins[3]=address(graphRoot);  \n            \n            addr=address(new GraphNode(smartKey, _admins, _href));\n            \n        }\n        \n        smartKey.putSmartKey(GraphNode(addr), addr);\n        \n        _parentNode.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n        return graphRoot.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n      \n  }\n    \n  \n}",
  "sourcePath": "/windata/iotblock/contracts/SmartNode.sol",
  "ast": {
    "absolutePath": "/windata/iotblock/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1031,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/windata/iotblock/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 1032,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 1033,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1448,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1448",
                "typeString": "contract Administered"
              }
            },
            "id": 1034,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1448
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          1448
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1036,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$1029",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 1035,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1029,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$1029",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1038,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 1037,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1051,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1029",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1052,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1029",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1055,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1056,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "id": 1060,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1048,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1045,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 1049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1047,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1448,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1448_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1039,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1042,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1029",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1041,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1029,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1043,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1044,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1176,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "445:663:8",
              "statements": [
                {
                  "assignments": [
                    1070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1070,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1175,
                      "src": "460:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1073,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "491:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "graphRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "473:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphRoot_$230",
                          "typeString": "contract GraphRoot"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getItem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "473:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "460:37:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1076,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "527:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "519:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "519:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "511:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1134,
                  "nodeType": "IfStatement",
                  "src": "507:364:8",
                  "trueBody": {
                    "id": 1133,
                    "nodeType": "Block",
                    "src": "531:340:8",
                    "statements": [
                      {
                        "assignments": [
                          1084
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1084,
                            "name": "_admins",
                            "nodeType": "VariableDeclaration",
                            "scope": 1175,
                            "src": "559:24:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1082,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "559:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1083,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "559:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1090,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "598:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "584:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1085,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "588:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1086,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "588:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1091,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "614:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1093,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "614:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1094,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "614:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1097,
                        "nodeType": "ExpressionStatement",
                        "src": "614:21:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1098,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "649:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1100,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "657:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "649:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1102,
                                "name": "_parentNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "668:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "660:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "660:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "649:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "649:31:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1106,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "696:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1108,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "696:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1110,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "715:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SmartNode_$1176",
                                  "typeString": "contract SmartNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SmartNode_$1176",
                                  "typeString": "contract SmartNode"
                                }
                              ],
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "707:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "707:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "696:24:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1114,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "736:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "744:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "736:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1118,
                                "name": "graphRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1038,
                                "src": "755:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              ],
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "747:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "736:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1121,
                        "nodeType": "ExpressionStatement",
                        "src": "736:29:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1122,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "794:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1126,
                                    "name": "smartKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1036,
                                    "src": "821:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                                      "typeString": "contract SmartKey"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1127,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "831:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1128,
                                    "name": "_href",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "840:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                                      "typeString": "contract SmartKey"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "807:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$1029_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                    "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1124,
                                    "name": "GraphNode",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 208,
                                    "src": "811:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GraphNode_$208",
                                      "typeString": "contract GraphNode"
                                    }
                                  }
                                },
                                "id": 1129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "807:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "799:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "799:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "794:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "794:53:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1139,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "920:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1138,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "910:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "910:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1141,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "927:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "smartKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "889:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartKey_$1029",
                          "typeString": "contract SmartKey"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putSmartKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "889:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2626_$_t_address_$returns$__$",
                        "typeString": "function (contract Key,address) external"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "889:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1155,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "1003:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1154,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "993:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1157,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "980:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "980:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "990:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "980:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1144,
                            "name": "_parentNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "951:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "951:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "951:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1169,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "1083:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1168,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "1073:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1073:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1171,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1090:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "1060:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1070:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1060:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1160,
                            "name": "graphRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "1033:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphRoot_$230",
                              "typeString": "contract GraphRoot"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "1033:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1033:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:63:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1068,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "1026:70:8"
                }
              ]
            },
            "id": 1175,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1061,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1064,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1176,
            "src": "350:758:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "54:1064:8"
      }
    ],
    "src": "0:1118:8"
  },
  "legacyAST": {
    "absolutePath": "/windata/iotblock/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1031,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/windata/iotblock/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 1032,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 1033,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1448,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1448",
                "typeString": "contract Administered"
              }
            },
            "id": 1034,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1448
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          1448
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1036,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$1029",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 1035,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1029,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$1029",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1038,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 1037,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1051,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1029",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1052,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1029",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1055,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1056,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "id": 1060,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1048,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1045,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 1049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1047,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1448,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1448_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1039,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1042,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1029",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1041,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1029,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1045,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1043,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1044,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1176,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "445:663:8",
              "statements": [
                {
                  "assignments": [
                    1070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1070,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1175,
                      "src": "460:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1075,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1073,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "491:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "graphRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "473:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphRoot_$230",
                          "typeString": "contract GraphRoot"
                        }
                      },
                      "id": 1072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getItem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "473:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "460:37:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1076,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "527:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "519:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "519:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "511:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1134,
                  "nodeType": "IfStatement",
                  "src": "507:364:8",
                  "trueBody": {
                    "id": 1133,
                    "nodeType": "Block",
                    "src": "531:340:8",
                    "statements": [
                      {
                        "assignments": [
                          1084
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1084,
                            "name": "_admins",
                            "nodeType": "VariableDeclaration",
                            "scope": 1175,
                            "src": "559:24:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1082,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "559:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1083,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "559:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1090,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "598:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "584:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1085,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "588:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1086,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "588:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1091,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "614:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1093,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "614:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1094,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "614:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1097,
                        "nodeType": "ExpressionStatement",
                        "src": "614:21:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1098,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "649:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1100,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "657:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "649:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1102,
                                "name": "_parentNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "668:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "660:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "660:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "649:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "649:31:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1106,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "696:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1108,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "696:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1110,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4814,
                                "src": "715:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SmartNode_$1176",
                                  "typeString": "contract SmartNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SmartNode_$1176",
                                  "typeString": "contract SmartNode"
                                }
                              ],
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "707:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "707:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "696:24:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1114,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "736:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "744:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "736:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1118,
                                "name": "graphRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1038,
                                "src": "755:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              ],
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "747:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "736:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1121,
                        "nodeType": "ExpressionStatement",
                        "src": "736:29:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1122,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "794:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1126,
                                    "name": "smartKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1036,
                                    "src": "821:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                                      "typeString": "contract SmartKey"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1127,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "831:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1128,
                                    "name": "_href",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1064,
                                    "src": "840:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartKey_$1029",
                                      "typeString": "contract SmartKey"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "807:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$1029_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                    "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1124,
                                    "name": "GraphNode",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 208,
                                    "src": "811:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GraphNode_$208",
                                      "typeString": "contract GraphNode"
                                    }
                                  }
                                },
                                "id": 1129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "807:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "799:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "799:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "794:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "794:53:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1139,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "920:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1138,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "910:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "910:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1141,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "927:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "smartKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "889:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartKey_$1029",
                          "typeString": "contract SmartKey"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putSmartKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 929,
                      "src": "889:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2626_$_t_address_$returns$__$",
                        "typeString": "function (contract Key,address) external"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "889:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1155,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "1003:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1154,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "993:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1157,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1149,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "980:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "980:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "990:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "980:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1144,
                            "name": "_parentNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "951:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "951:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "951:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1169,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "1083:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1168,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "1073:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1073:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1171,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1090:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4761,
                              "src": "1060:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1070:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1060:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1160,
                            "name": "graphRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "1033:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphRoot_$230",
                              "typeString": "contract GraphRoot"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "1033:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1033:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:63:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1068,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "1026:70:8"
                }
              ]
            },
            "id": 1175,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1061,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1064,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1176,
            "src": "350:758:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "54:1064:8"
      }
    ],
    "src": "0:1118:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x35b338b4ade005f25a8982a597638827b8617ad4",
      "transactionHash": "0xce7cd632d90e984cba2b543875a1b8e9cbe64a3813976284412431ef34c9eebe"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-11-20T09:59:30.106Z"
}