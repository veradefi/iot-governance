{
  "contractName": "SmartNode",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmins",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "banned",
          "type": "address"
        }
      ],
      "name": "addBanned",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_graphRoot",
          "type": "address"
        },
        {
          "name": "_smartKey",
          "type": "address"
        },
        {
          "name": "adminAddress",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parentNode",
          "type": "address"
        },
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "upsertItem",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106200007f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806314bfd6d0146200008457806324d7806c14620000f457806331ae450b146200015257806367d90da214620001c3578063704802751462000259578063e1b2e8b3146200029f575b600080fd5b3480156200009157600080fd5b50620000b260048036038101908080359060200190929190505050620002e5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200010157600080fd5b5062000138600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000324565b604051808215151515815260200191505060405180910390f35b3480156200015f57600080fd5b506200016a62000344565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620001af57808201518184015260208101905062000192565b505050509050019250505060405180910390f35b6200023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620003d4565b604051808215151515815260200191505060405180910390f35b3480156200026657600080fd5b506200029d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000bf7565b005b348015620002ac57600080fd5b50620002e3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000d67565b005b600181815481101515620002f557fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b60606001805480602002602001604051908101604052809291908181526020018280548015620003ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200037f575b5050505050905090565b6000806060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6010fcd856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200048557808201518184015260208101905062000468565b50505050905090810190601f168015620004b35780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015620004d357600080fd5b505af1158015620004e8573d6000803e3d6000fd5b505050506040513d6020811015620004ff57600080fd5b81019080805190602001909291905050509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000811576004604051908082528060200260200182016040528015620005795781602001602082028038833980820191505090505b509050338160008151811015156200058d57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084816001815181101515620005da57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050308160028151811015156200062757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160038151811015156200069657fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681856200070162000f42565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015620007795780820151818401526020810190506200075c565b50505050905001838103825284818151815260200191508051906020019080838360005b83811015620007ba5780820151818401526020810190506200079d565b50505050905090810190601f168015620007e85780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f0801580156200080d573d6000803e3d6000fd5b5091505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342aa9bba83846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200090357600080fd5b505af115801562000918573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166367d90da26002348115156200094557fe5b0484876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620009e7578082015181840152602081019050620009ca565b50505050905090810190601f16801562000a155780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b15801562000a3557600080fd5b505af115801562000a4a573d6000803e3d6000fd5b50505050506040513d602081101562000a6257600080fd5b810190808051906020019092919050505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367d90da260023481151562000abf57fe5b0484876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000b6157808201518184015260208101905062000b44565b50505050905090810190601f16801562000b8f5780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b15801562000baf57600080fd5b505af115801562000bc4573d6000803e3d6000fd5b50505050506040513d602081101562000bdc57600080fd5b81019080805190602001909291905050509250505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000c4f57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000ca757600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000dc157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000e1957600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562000f3e5760018181548110151562000e9357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000f305760018181548110151562000f0257fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062000e75565b5050565b604051614f788062000f5483390190560060806040523480156200001157600080fd5b5060405162004f7838038062004f7883398101806040528101908080519060200190929190805182019291906020018051820192919050505060008383818181308260008090505b8151811015620000e057600160008084848151811015156200007757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505062000059565b8160019080519060200190620000f8929190620004cb565b5050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008173ffffffffffffffffffffffffffffffffffffffff16141515156200017a57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460146101000a81548160ff021916908360028111156200021c57fe5b02179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505081600b9080519060200190620003309291906200055a565b50600090505b825181101562000380576200037283828151811015156200035357fe5b90602001906020020151620003be640100000000026401000000009004565b808060010191505062000336565b6200039a84620003be640100000000026401000000009004565b620003b430620003be640100000000026401000000009004565b505050506200064f565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200041757600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200047057600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b82805482825590600052602060002090810192821562000547579160200282015b82811115620005465782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620004ec565b5b509050620005569190620005e1565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200059d57805160ff1916838001178555620005ce565b82800160010185558215620005ce579182015b82811115620005cd578251825591602001919060010190620005b0565b5b509050620005dd919062000627565b5090565b6200062491905b808211156200062057600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620005e8565b5090565b90565b6200064c91905b80821115620006485760008160009055506001016200062e565b5090565b90565b614919806200065f6000396000f3006080604052600436106200020b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303db428d1462000218578063113adf4914620002e257806314538128146200033c57806314bfd6d014620003e1578063173825d914620004515780631801e1561462000497578063202e079d14620004cd57806323ca0cd214620004fb57806324d7806c14620005555780632f54bf6e14620005b357806331ae450b146200061157806336eeaa6a146200068257806349f9c0e414620007185780635436e5a014620007685780635571edeb14620008185780635b2ce586146200088c5780635b6beeb914620008b15780635c866c781462000939578063640e7fd5146200099357806367d90da214620009d0578063704802751462000a665780637065cb481462000aac57806374ddcd6e1462000af25780637633a22c1462000b63578063779d86771462000ba05780639172fe081462000bfa578063b6010fcd1462000c32578063b7760c8f1462000cde578063b9d191661462000d2e578063bfb231d21462000db2578063c19d93fb1462000e22578063cd5cfdaf1462000e5f578063d4c2f75c1462000ecf578063e1b2e8b31462000f61578063ec6f214e1462000fa7578063f63553b5146200108b578063f95fd40b14620010ff578063fbfa77cf1462001170578063fd08e0c714620011ca575b6200021633620012b2565b005b3480156200022557600080fd5b50620002c8600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620012f7565b604051808215151515815260200191505060405180910390f35b348015620002ef57600080fd5b50620002fa620013ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200034957600080fd5b506200038a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620013f0565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b348015620003ee57600080fd5b506200040f600480360381019080803590602001909291905050506200145d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200045e57600080fd5b5062000495600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200149c565b005b348015620004a457600080fd5b50620004af620015a9565b60405180826000191660001916815260200191505060405180910390f35b348015620004da57600080fd5b50620004e562001846565b6040518082815260200191505060405180910390f35b3480156200050857600080fd5b506200053f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200184c565b6040518082815260200191505060405180910390f35b3480156200056257600080fd5b5062000599600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001898565b604051808215151515815260200191505060405180910390f35b348015620005c057600080fd5b50620005f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620018b8565b604051808215151515815260200191505060405180910390f35b3480156200061e57600080fd5b5062000629620018d8565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200066e57808201518184015260208101905062000651565b505050509050019250505060405180910390f35b3480156200068f57600080fd5b506200069a62001968565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620006dc578082015181840152602081019050620006bf565b50505050905090810190601f1680156200070a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200072557600080fd5b506200076660048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a0a565b005b3480156200077557600080fd5b506200079a600480360381019080803560001916906020019092919050505062001bf1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620007dc578082015181840152602081019050620007bf565b50505050905090810190601f1680156200080a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200082557600080fd5b506200084a600480360381019080803560001916906020019092919050505062001d0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b620008af600480360381019080803560ff16906020019092919050505062001d3e565b005b348015620008be57600080fd5b506200091b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620021fc565b60405180826000191660001916815260200191505060405180910390f35b3480156200094657600080fd5b50620009516200226a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620009a057600080fd5b50620009ab62002294565b60405180826006811115620009bc57fe5b60ff16815260200191505060405180910390f35b62000a4c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620022ab565b604051808215151515815260200191505060405180910390f35b34801562000a7357600080fd5b5062000aaa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002512565b005b34801562000ab957600080fd5b5062000af0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002682565b005b34801562000aff57600080fd5b5062000b0a6200278f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000b4f57808201518184015260208101905062000b32565b505050509050019250505060405180910390f35b34801562000b7057600080fd5b5062000b7b6200281f565b6040518082600681111562000b8c57fe5b60ff16815260200191505060405180910390f35b34801562000bad57600080fd5b5062000be4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002832565b6040518082815260200191505060405180910390f35b62000c30600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012b2565b005b34801562000c3f57600080fd5b5062000c9c600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200284a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000ceb57600080fd5b5062000d2c60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506200292f565b005b34801562000d3b57600080fd5b5062000d98600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002bd2565b604051808215151515815260200191505060405180910390f35b34801562000dbf57600080fd5b5062000de06004803603810190808035906020019092919050505062002c4e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000e2f57600080fd5b5062000e3a62002c8d565b6040518082600281111562000e4b57fe5b60ff16815260200191505060405180910390f35b34801562000e6c57600080fd5b5062000e8d6004803603810190808035906020019092919050505062002ca0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000edc57600080fd5b5062000f476004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002cdf565b604051808215151515815260200191505060405180910390f35b34801562000f6e57600080fd5b5062000fa5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002d76565b005b62001049600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002f51565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200109857600080fd5b50620010bd6004803603810190808035600019169060200190929190505050620036b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200110c57600080fd5b5062001117620036e9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200115c5780820151818401526020810190506200113f565b505050509050019250505060405180910390f35b3480156200117d57600080fd5b506200118862003779565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620011d757600080fd5b5062001234600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200379f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200127657808201518184015260208101905062001259565b50505050905090810190601f168015620012a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600460146101000a81548160ff02191690836002811115620012d257fe5b0217905550620012ee346005546200387090919063ffffffff16565b60058190555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200135257600080fd5b620013c2836040518082805190602001908083835b6020831015156200138e578051825260208201915060208101905060208303925062001367565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390208362002cdf565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020818154811015156200140c57fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6001818154811015156200146d57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620014f557600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200154e57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806006811115620015b857fe5b600460159054906101000a900460ff166006811115620015d457fe5b141562001604577f50726f766973696f6e696e670000000000000000000000000000000000000000905062001843565b600160068111156200161257fe5b600460159054906101000a900460ff1660068111156200162e57fe5b14156200165e577f4365727469666965640000000000000000000000000000000000000000000000905062001843565b600260068111156200166c57fe5b600460159054906101000a900460ff1660068111156200168857fe5b1415620016b8577f4d6f646966696564000000000000000000000000000000000000000000000000905062001843565b60036006811115620016c657fe5b600460159054906101000a900460ff166006811115620016e257fe5b141562001712577f436f6d70726f6d69736564000000000000000000000000000000000000000000905062001843565b600460068111156200172057fe5b600460159054906101000a900460ff1660068111156200173c57fe5b14156200176c577f4d616c66756e6374696f6e696e67000000000000000000000000000000000000905062001843565b600560068111156200177a57fe5b600460159054906101000a900460ff1660068111156200179657fe5b1415620017c6577f4861726d66756c00000000000000000000000000000000000000000000000000905062001843565b600680811115620017d357fe5b600460159054906101000a900460ff166006811115620017ef57fe5b14156200181f577f436f756e74657266656974000000000000000000000000000000000000000000905062001843565b7f436f756e7465726665697400000000000000000000000000000000000000000090505b90565b60055481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b606060018054806020026020016040519081016040528092919081815260200182805480156200195e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001913575b5050505050905090565b600b8054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001a025780601f10620019d65761010080835404028352916020019162001a02565b820191906000526020600020905b815481529060010190602001808311620019e457829003601f168201915b505050505081565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001a6357600080fd5b6001600281111562001a7157fe5b600460149054906101000a900460ff16600281111562001a8d57fe5b14151562001a9a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801562001ae1573d6000803e3d6000fd5b50600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160018152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001c4c57600080fd5b6008600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001cff5780601f1062001cd35761010080835404028352916020019162001cff565b820191906000526020600020905b81548152906001019060200180831162001ce157829003601f168201915b50505050509050919050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460156101000a81548160ff0219169083600681111562001d5d57fe5b0217905550600181600681111562001d7157fe5b111562001f0457600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c74685761726e696e67000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b15801562001e9a57600080fd5b505af115801562001eaf573d6000803e3d6000fd5b50505050506040513d602081101562001ec757600080fd5b8101908080519060200190929190505050506002600460146101000a81548160ff0219169083600281111562001ef957fe5b02179055506200208b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430337f4865616c746855706461746500000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b1580156200202657600080fd5b505af11580156200203b573d6000803e3d6000fd5b50505050506040513d60208110156200205357600080fd5b8101908080519060200190929190505050506001600460146101000a81548160ff021916908360028111156200208557fe5b02179055505b7fb6d7372bb54b80a5b1d60d3b1da737719783cc92a2095f10d9195105f7abeca58160405180826006811115620020be57fe5b60ff16815260200191505060405180910390a1620020e8346005546200387090919063ffffffff16565b600581905550600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200134815260200160008152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505050565b6000816040518082805190602001908083835b6020831015156200223657805182526020820191506020810190506020830392506200220f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460159054906101000a900460ff16905090565b600080620022b983620021fc565b90506000620022c8846200284a565b73ffffffffffffffffffffffffffffffffffffffff161415620023a657600c8490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600d6000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430877f4e6577436174616c6f67756500000000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b158015620024c857600080fd5b505af1158015620024dd573d6000803e3d6000fd5b50505050506040513d6020811015620024f557600080fd5b810190808051906020019092919050505050600191505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200256a57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620025c257600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620026db57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200273457600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156200281557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620027ca575b5050505050905090565b600460159054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b600080600183511015620028615730915062002929565b6200286c83620021fc565b9050600073ffffffffffffffffffffffffffffffffffffffff16600d6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156200292457600d6000826000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915062002929565b600091505b50919050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200298857600080fd5b600160028111156200299657fe5b600460149054906101000a900460ff166002811115620029b257fe5b141515620029bf57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801562002a8557600080fd5b505af115801562002a9a573d6000803e3d6000fd5b505050506040513d602081101562002ab157600080fd5b810190808051906020019092919050505050600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206080604051908101604052808373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160018152509080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002c2c57600080fd5b81600b908051906020019062002c449291906200388f565b5060019050919050565b600c8181548110151562002c5e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b60098181548110151562002cb057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002d3a57600080fd5b81600860008560001916600019168152602001908152602001600020908051906020019062002d6b9291906200388f565b506001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002dd057600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002e2857600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562002f4d5760018181548110151562002ea257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562002f3f5760018181548110151562002f1157fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062002e84565b5050565b600080600062002f6185620021fc565b9150600073ffffffffffffffffffffffffffffffffffffffff16600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620033825760019050803090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050803390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018686620030d362003916565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200184810384528781815481526020019150805480156200318757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200313c575b5050848103835286818151815260200191508051906020019080838360005b83811015620031c3578082015181840152602081019050620031a6565b50505050905090810190601f168015620031f15780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156200322c5780820151818401526020810190506200320f565b50505050905090810190601f1680156200325a5780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f08015801562003281573d6000803e3d6000fd5b50600a6000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620034d4565b600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631aae2531856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620034475780820151818401526020810190506200342a565b50505050905090810190601f168015620034755780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156200349557600080fd5b505af1158015620034aa573d6000803e3d6000fd5b505050506040513d6020811015620034c157600080fd5b8101908080519060200190929190505050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430600a6000876000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f4d657461446174615570646174650000000000000000000000000000000000006040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b1580156200363157600080fd5b505af115801562003646573d6000803e3d6000fd5b50505050506040513d60208110156200365e57600080fd5b810190808051906020019092919050505050600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250505092915050565b600d6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060098054806020026020016040519081016040528092919081815260200182805480156200376f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162003724575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620037fa57600080fd5b62003869826040518082805190602001908083835b6020831015156200383657805182526020820191506020810190506020830392506200380f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902062001bf1565b9050919050565b60008082840190508381101515156200388557fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620038d257805160ff191683800117855562003903565b8280016001018555821562003903579182015b8281111562003902578251825591602001919060010190620038e5565b5b50905062003912919062003927565b5090565b604051610f9e806200395083390190565b6200394c91905b80821115620039485760008160009055506001016200392e565b5090565b90560060806040523480156200001157600080fd5b5060405162000f9e38038062000f9e833981018060405281019080805190602001909291908051820192919060200180518201929190602001805182019291905050508260008090505b8151811015620000e257600160008084848151811015156200007957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200005b565b8160019080519060200190620000fa9291906200017a565b50505083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600390805190602001906200015692919062000209565b5080600490805190602001906200016f92919062000209565b5050505050620002fe565b828054828255906000526020600020908101928215620001f6579160200282015b82811115620001f55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200019b565b5b50905062000205919062000290565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024c57805160ff19168380011785556200027d565b828001600101855582156200027d579182015b828111156200027c5782518255916020019190600101906200025f565b5b5090506200028c9190620002d6565b5090565b620002d391905b80821115620002cf57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010162000297565b5090565b90565b620002fb91905b80821115620002f7576000816000905550600101620002dd565b5090565b90565b610c90806200030e6000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fe4e9e8146100a957806314bfd6d01461014f5780631aae2531146101bc57806324d7806c1461023d57806331ae450b146102985780633c6bb4361461030457806370480275146103945780639b93f06b146103d7578063ce26e78a14610402578063e1b2e8b314610492575b600080fd5b3480156100b557600080fd5b506100d4600480360381019080803590602001909291905050506104d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061017a60048036038101908080359060200190929190505050610590565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c857600080fd5b50610223600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506105ce565b604051808215151515815260200191505060405180910390f35b34801561024957600080fd5b5061027e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610686565b604051808215151515815260200191505060405180910390f35b3480156102a457600080fd5b506102ad6106a6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f05780820151818401526020810190506102d5565b505050509050019250505060405180910390f35b34801561031057600080fd5b50610319610734565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035957808201518184015260208101905061033e565b50505050905090810190601f1680156103865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103a057600080fd5b506103d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107d2565b005b3480156103e357600080fd5b506103ec610940565b6040518082815260200191505060405180910390f35b34801561040e57600080fd5b5061041761094d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045757808201518184015260208101905061043c565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049e57600080fd5b506104d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109eb565b005b6005818154811015156104e457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105885780601f1061055d57610100808354040283529160200191610588565b820191906000526020600020905b81548152906001019060200180831161056b57829003601f168201915b505050505081565b60018181548110151561059f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561062757600080fd5b6005829080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190610664929190610bbf565b5050816004908051906020019061067c929190610bbf565b5060019050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b6060600180548060200260200160405190810160405280929190818152602001828054801561072a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e0575b5050505050905090565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b505050505081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561082957600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561088057600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600580549050905090565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b505050505081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a4457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a9b57600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600180549050811015610bbb57600181815481101515610b1357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bae57600181815481101515610b8057fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050610af7565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c0057805160ff1916838001178555610c2e565b82800160010185558215610c2e579182015b82811115610c2d578251825591602001919060010190610c12565b5b509050610c3b9190610c3f565b5090565b610c6191905b80821115610c5d576000816000905550600101610c45565b5090565b905600a165627a7a72305820eba6ee76ee3bbfa02ec2da24c1c30f52fc70ed8ef07384f90c3bdca8114fcb070029a165627a7a7230582001987c0b8d6fb55c9b1c3315f07a0308a192552761c6531ede9ce5b55f6a0f750029a165627a7a723058201ff1f9f6ba1766b6fe41158dc5bd974a2376a0e6301e85aed75d7e9de51f669b0029",
  "sourceMap": "54:1426:8:-;;;153:190;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:190:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:12;571:6:11;578:1;571:8;;566:91;585:12;:19;581:1;:23;566:91;;;646:4;621:7;:24;629:12;642:1;629:15;;;;;;;;;;;;;;;;;;621:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;606:3;;;;;;;566:91;;;670:12;663:6;:19;;;;;;;;;;;;:::i;:::-;;495:192;;300:9:8;291:8;;:18;;;;;;;;;;;;;;;;;;328:10;318:9;;:20;;;;;;;;;;;;;;;;;;153:190;;;54:1426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "54:1426:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;351:23:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:40:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1308:106:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1308:106:11;;;;;;;;;;;;;;;;;350:758:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:158:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;844:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1008:296:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;307:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;1308:106::-;1358:9;1403:6;1396:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:106;:::o;350:758:8:-;437:4;460:12;559:24;473:9;;;;;;;;;;;:17;;;491:5;473:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;473:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;473:24:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;473:24:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;473:24:8;;;;;;;;;;;;;;;;460:37;;527:1;511:18;;:4;:18;;;507:364;;;598:1;584:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;584:16:8;;;;559:41;;625:10;614:7;622:1;614:10;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;668:11;649:7;657:1;649:10;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;715:4;696:7;704:1;696:10;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;755:9;;;;;;;;;;;736:7;744:1;736:10;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;821:8;;;;;;;;;;;831:7;840:5;807:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;807:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;807:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;807:39:8;794:53;;507:364;889:8;;;;;;;;;;;:20;;;920:4;927;889:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;889:43:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;889:43:8;;;;951:11;:22;;;990:1;980:9;:11;;;;;;;;1003:4;1010:5;951:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;951:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;951:65:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;951:65:8;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;951:65:8;;;;;;;;;;;;;;;;;1033:9;;;;;;;;;;;:20;;;1070:1;1060:9;:11;;;;;;;;1083:4;1090:5;1033:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1033:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1033:63:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1033:63:8;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1033:63:8;;;;;;;;;;;;;;;;1026:70;;350:758;;;;;;:::o;844:158:11:-;806:7;:19;814:10;806:19;;;;;;;;;;;;;;;;;;;;;;;;;798:28;;;;;;;;920:7;:19;928:10;920:19;;;;;;;;;;;;;;;;;;;;;;;;;912:28;;;;;;;;965:4;950:7;:14;958:5;950:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;979:6;991:5;979:18;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;979:18:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;844:158;:::o;1008:296::-;1151:6;806:7;:19;814:10;806:19;;;;;;;;;;;;;;;;;;;;;;;;;798:28;;;;;;;;1085:7;:19;1093:10;1085:19;;;;;;;;;;;;;;;;;;;;;;;;;1077:28;;;;;;;;1131:5;1115:7;:15;1123:6;1115:15;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1158:1;1151:8;;1146:135;1165:6;:13;;;;1161:1;:17;1146:135;;;1211:6;1218:1;1211:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:17;;:6;:17;;;1199:72;;;1247:6;1254:1;1247:9;;;;;;;;;;;;;;;;;;1240:16;;;;;;;;;;;1199:72;1180:3;;;;;;;1146:135;;;1008:296;;:::o;54:1426:8:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18; \n\nimport \"./GraphRoot.sol\";\n\ncontract SmartNode is Administered {\n  \n  SmartKey smartKey;\n  GraphRoot graphRoot;\n  \n         \n  function SmartNode(GraphRoot _graphRoot, SmartKey _smartKey, address[] adminAddress) \n    Administered(adminAddress)\n    public\n  {\n      smartKey=_smartKey; \n      graphRoot=_graphRoot;\n  }\n\n  \n  function upsertItem(GraphNode _parentNode, string _href)\n  public\n  payable\n  returns (bool)\n  {\n    \n        address addr=graphRoot.getItem(_href);\n        if (addr == address(0)) { \n            \n            address[] memory _admins=new address[](4);\n            _admins[0]=msg.sender;\n            _admins[1]=address(_parentNode);  \n            _admins[2]=address(this);  \n            _admins[3]=address(graphRoot);  \n            \n            addr=address(new GraphNode(smartKey, _admins, _href));\n            \n        }\n        \n        smartKey.putSmartKey(GraphNode(addr), addr);\n        \n        _parentNode.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n        return graphRoot.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n      \n  }\n  \n  /*\n  function buyCatalogue(GraphNode _node)\n  public\n  {\n    \n    if (smartKey.balanceOf(msg.sender) >= smartKey.balanceOf(_node)) {\n        //this.removeOwner(vault);\n        //vault=msg.sender;\n        _node.addOwner(msg.sender);\n        //smartKey.loadSmartKey.value(msg.value)(Key(this), address(msg.sender), bytes32(\"Catalogue Purchase\"));\n    }\n  }\n  */ \n\n  \n}",
  "sourcePath": "/home/ubuntu/iotblock/contracts/SmartNode.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/iotblock/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1285
      ]
    },
    "id": 1286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1140,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/home/ubuntu/iotblock/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1286,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1634,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1634",
                "typeString": "contract Administered"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1634
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1285,
        "linearizedBaseContracts": [
          1285,
          1634
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1145,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$1138",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 1144,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1138,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$1138",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1147,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 1146,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1160,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1138",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1161,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1138",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1164,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1165,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "documentation": null,
            "id": 1169,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1157,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1154,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 1158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1156,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1634,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1634_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1148,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1151,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1138",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1150,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1138,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1153,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1285,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "445:663:8",
              "statements": [
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1284,
                      "src": "460:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1182,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "491:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1180,
                        "name": "graphRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "473:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphRoot_$230",
                          "typeString": "contract GraphRoot"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getItem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "473:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "460:37:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1185,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "527:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "519:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "519:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "511:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1243,
                  "nodeType": "IfStatement",
                  "src": "507:364:8",
                  "trueBody": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "531:340:8",
                    "statements": [
                      {
                        "assignments": [
                          1193
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1193,
                            "name": "_admins",
                            "nodeType": "VariableDeclaration",
                            "scope": 1284,
                            "src": "559:24:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1191,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "559:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1192,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "559:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1199,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "598:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "584:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1194,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "588:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1195,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "588:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1200,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "614:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1202,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "614:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1203,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "614:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1206,
                        "nodeType": "ExpressionStatement",
                        "src": "614:21:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1207,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "649:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "657:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "649:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1211,
                                "name": "_parentNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "668:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "660:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "660:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "649:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "649:31:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "696:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "696:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1219,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5025,
                                "src": "715:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SmartNode_$1285",
                                  "typeString": "contract SmartNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SmartNode_$1285",
                                  "typeString": "contract SmartNode"
                                }
                              ],
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "707:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "707:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1222,
                        "nodeType": "ExpressionStatement",
                        "src": "696:24:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1223,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "736:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1225,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "744:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "736:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1227,
                                "name": "graphRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1147,
                                "src": "755:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              ],
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "747:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "736:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1230,
                        "nodeType": "ExpressionStatement",
                        "src": "736:29:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1231,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "794:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1235,
                                    "name": "smartKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "821:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                                      "typeString": "contract SmartKey"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1236,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "831:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1237,
                                    "name": "_href",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "840:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                                      "typeString": "contract SmartKey"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "807:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$1138_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                    "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1233,
                                    "name": "GraphNode",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 208,
                                    "src": "811:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GraphNode_$208",
                                      "typeString": "contract GraphNode"
                                    }
                                  }
                                },
                                "id": 1238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "807:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "799:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "799:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "794:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "794:53:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1248,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "920:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1247,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "910:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "910:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "927:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "smartKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "889:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartKey_$1138",
                          "typeString": "contract SmartKey"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putSmartKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 977,
                      "src": "889:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2836_$_t_address_$returns$__$",
                        "typeString": "function (contract Key,address) external"
                      }
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "889:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1264,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "1003:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1263,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "993:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1258,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "980:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "980:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "990:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "980:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1253,
                            "name": "_parentNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "951:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "951:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "951:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1278,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "1083:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1277,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "1073:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1073:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1280,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "1090:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "1060:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1070:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1060:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "graphRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "1033:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphRoot_$230",
                              "typeString": "contract GraphRoot"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "1033:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1033:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:63:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1177,
                  "id": 1282,
                  "nodeType": "Return",
                  "src": "1026:70:8"
                }
              ]
            },
            "documentation": null,
            "id": 1284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1170,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1285,
            "src": "350:758:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1286,
        "src": "54:1426:8"
      }
    ],
    "src": "0:1480:8"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/iotblock/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1285
      ]
    },
    "id": 1286,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1140,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/home/ubuntu/iotblock/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 1141,
        "nodeType": "ImportDirective",
        "scope": 1286,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1142,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1634,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1634",
                "typeString": "contract Administered"
              }
            },
            "id": 1143,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1634
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1285,
        "linearizedBaseContracts": [
          1285,
          1634
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1145,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$1138",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 1144,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1138,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$1138",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1147,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1285,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 1146,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1168,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1160,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1145,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1138",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1161,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$1138",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 1163,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1164,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1165,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "documentation": null,
            "id": 1169,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1157,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1154,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 1158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1156,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1634,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1634_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1148,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1151,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$1138",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1150,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1138,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1169,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1153,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1285,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1283,
              "nodeType": "Block",
              "src": "445:663:8",
              "statements": [
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 1284,
                      "src": "460:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1182,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "491:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1180,
                        "name": "graphRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "473:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphRoot_$230",
                          "typeString": "contract GraphRoot"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getItem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 207,
                      "src": "473:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "473:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "460:37:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1185,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1179,
                      "src": "511:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "527:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "519:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "519:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "511:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1243,
                  "nodeType": "IfStatement",
                  "src": "507:364:8",
                  "trueBody": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "531:340:8",
                    "statements": [
                      {
                        "assignments": [
                          1193
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1193,
                            "name": "_admins",
                            "nodeType": "VariableDeclaration",
                            "scope": 1284,
                            "src": "559:24:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1191,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "559:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1192,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "559:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1199,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "598:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "584:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1194,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "588:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1195,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "588:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "584:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:41:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1200,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "614:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1202,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "622:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "614:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1203,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "625:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "625:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "614:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1206,
                        "nodeType": "ExpressionStatement",
                        "src": "614:21:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1207,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "649:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "657:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "649:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1211,
                                "name": "_parentNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "668:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "660:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "660:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "649:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "649:31:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1215,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "696:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1217,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "696:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1219,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5025,
                                "src": "715:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SmartNode_$1285",
                                  "typeString": "contract SmartNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SmartNode_$1285",
                                  "typeString": "contract SmartNode"
                                }
                              ],
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "707:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "707:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1222,
                        "nodeType": "ExpressionStatement",
                        "src": "696:24:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1223,
                              "name": "_admins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "736:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1225,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "744:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "736:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1227,
                                "name": "graphRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1147,
                                "src": "755:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphRoot_$230",
                                  "typeString": "contract GraphRoot"
                                }
                              ],
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "747:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "747:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "736:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1230,
                        "nodeType": "ExpressionStatement",
                        "src": "736:29:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1231,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "794:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1235,
                                    "name": "smartKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1145,
                                    "src": "821:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                                      "typeString": "contract SmartKey"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1236,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "831:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1237,
                                    "name": "_href",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "840:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartKey_$1138",
                                      "typeString": "contract SmartKey"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "807:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$1138_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                    "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1233,
                                    "name": "GraphNode",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 208,
                                    "src": "811:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GraphNode_$208",
                                      "typeString": "contract GraphNode"
                                    }
                                  }
                                },
                                "id": 1238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "807:39:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GraphNode_$208",
                                  "typeString": "contract GraphNode"
                                }
                              ],
                              "id": 1232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "799:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "799:48:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "794:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "794:53:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1248,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "920:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1247,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "910:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "910:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1250,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "927:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1244,
                        "name": "smartKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "889:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SmartKey_$1138",
                          "typeString": "contract SmartKey"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "putSmartKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 977,
                      "src": "889:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2836_$_t_address_$returns$__$",
                        "typeString": "function (contract Key,address) external"
                      }
                    },
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "889:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1264,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "1003:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1263,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "993:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "993:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "1010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1258,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "980:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "980:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "990:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "980:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1253,
                            "name": "_parentNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "951:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphNode_$208",
                              "typeString": "contract GraphNode"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "951:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "951:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "951:41:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "951:65:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1278,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "1083:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1277,
                          "name": "GraphNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "1073:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                            "typeString": "type(contract GraphNode)"
                          }
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1073:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1280,
                        "name": "_href",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1173,
                        "src": "1090:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GraphNode_$208",
                          "typeString": "contract GraphNode"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4974,
                              "src": "1060:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1070:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1060:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "graphRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "1033:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GraphRoot_$230",
                              "typeString": "contract GraphRoot"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "upsertItem",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "1033:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1033:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                          "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                        }
                      },
                      "id": 1276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                        "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1033:63:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1177,
                  "id": 1282,
                  "nodeType": "Return",
                  "src": "1026:70:8"
                }
              ]
            },
            "documentation": null,
            "id": 1284,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1170,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1284,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1285,
            "src": "350:758:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1286,
        "src": "54:1426:8"
      }
    ],
    "src": "0:1480:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-29T11:36:52.804Z"
}