{
  "contractName": "SmartNode",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "admins",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAdmins",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "banned",
          "type": "address"
        }
      ],
      "name": "addBanned",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_graphRoot",
          "type": "address"
        },
        {
          "name": "_smartKey",
          "type": "address"
        },
        {
          "name": "adminAddress",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_parentNode",
          "type": "address"
        },
        {
          "name": "_href",
          "type": "string"
        }
      ],
      "name": "upsertItem",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b60405162005f7338038062005f73833981016040528080519060200190919080519060200190919080518201919050508060008090505b81518110156100ca576001600080848481518110151561006257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050610046565b81600190805190602001906100e092919061016d565b50505081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061023a565b8280548282559060005260206000209081019282156101e6579160200282015b828111156101e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061018d565b5b5090506101f391906101f7565b5090565b61023791905b8082111561023357600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016101fd565b5090565b90565b615d29806200024a6000396000f3006060604052600436106200007f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806314bfd6d0146200008457806324d7806c14620000ea57806331ae450b146200013e57806367d90da214620001ad578063704802751462000238578063e1b2e8b31462000274575b600080fd5b34156200009057600080fd5b620000a86004808035906020019091905050620002b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415620000f657600080fd5b62000124600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050620002f0565b604051808215151515815260200191505060405180910390f35b34156200014a57600080fd5b6200015462000310565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620001995780820151818401526020810190506200017c565b505050509050019250505060405180910390f35b6200021e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620003a8565b604051808215151515815260200191505060405180910390f35b34156200024457600080fd5b62000272600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000b82565b005b34156200028057600080fd5b620002ae600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000cf1565b005b600181815481101515620002c057fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915054906101000a900460ff1681565b6200031a62000ece565b60018054806020026020016040519081016040528092919081815260200182805480156200039e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000353575b5050505050905090565b600080620003b562000ece565b6298968034111562000b7557600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6010fcd856000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200047657808201518184015260208101905062000459565b50505050905090810190601f168015620004a45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515620004c357600080fd5b6102c65a03f11515620004d557600080fd5b505050604051805190509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620007c8576004604051805910620005275750595b90808252806020026020018201604052509050338160008151811015156200054b57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811015156200059857fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505030816002815181101515620005e557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160038151811015156200065457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168185620006bf62000ee2565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015620007375780820151818401526020810190506200071a565b50505050905001838103825284818151815260200191508051906020019080838360005b83811015620007785780820151818401526020810190506200075b565b50505050905090810190601f168015620007a65780820380516001836020036101000a031916815260200191505b5095505050505050604051809103906000f0801515620007c557600080fd5b91505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342aa9bba83846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1515620008b957600080fd5b6102c65a03f11515620008cb57600080fd5b5050508473ffffffffffffffffffffffffffffffffffffffff166367d90da2600234811515620008f757fe5b0484876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620009a257808201518184015260208101905062000985565b50505050905090810190601f168015620009d05780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b1515620009ef57600080fd5b6125ee5a03f1151562000a0157600080fd5b505050506040518051905050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367d90da260023481151562000a5857fe5b0484876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000b0357808201518184015260208101905062000ae6565b50505050905090810190601f16801562000b315780820380516001836020036101000a031916815260200191505b5093505050506020604051808303818588803b151562000b5057600080fd5b6125ee5a03f1151562000b6257600080fd5b5050505060405180519050925062000b7a565b600092505b505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000bda57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000c3257600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001805480600101828162000c9f919062000ef3565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000d4b57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562000da357600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562000eca5760018181548110151562000e1d57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000ebc5760018181548110151562000e8d57fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062000dff565b5050565b602060405190810160405280600081525090565b604051614db38062000f4b83390190565b81548183558181151162000f1d5781836000526020600020918201910162000f1c919062000f22565b5b505050565b62000f4791905b8082111562000f4357600081600090555060010162000f29565b5090565b905600606060405234156200001057600080fd5b60405162004db338038062004db38339810160405280805190602001909190805182019190602001805182019190505060008383818181308260008090505b8151811015620000d657600160008084848151811015156200006d57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506200004f565b8160019080519060200190620000ee929190620004d0565b5050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008173ffffffffffffffffffffffffffffffffffffffff16141515156200017057600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460146101000a81548160ff021916908360028111156200021257fe5b02179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505081600b9080519060200190620003269291906200055f565b50600090505b82518110156200037b576200036d83828151811015156200034957fe5b90602001906020020151620003c3640100000000026200257c176401000000009004565b80806001019150506200032c565b6200039a84620003c3640100000000026200257c176401000000009004565b620003b930620003c3640100000000026200257c176401000000009004565b5050505062000654565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200041c57600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200047557600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8280548282559060005260206000209081019282156200054c579160200282015b828111156200054b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620004f1565b5b5090506200055b9190620005e6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005a257805160ff1916838001178555620005d3565b82800160010185558215620005d3579182015b82811115620005d2578251825591602001919060010190620005b5565b5b509050620005e291906200062c565b5090565b6200062991905b808211156200062557600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620005ed565b5090565b90565b6200065191905b808211156200064d57600081600090555060010162000633565b5090565b90565b61474f80620006646000396000f3006060604052600436106200020b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303db428d1462000218578063113adf4914620002d357806314538128146200032b57806314bfd6d014620003c5578063173825d9146200042b5780631801e1561462000467578063202e079d146200049b57806323ca0cd214620004c757806324d7806c14620005175780632f54bf6e146200056b57806331ae450b14620005bf57806336eeaa6a146200062e57806349f9c0e414620006c25780635436e5a014620007075780635571edeb14620007ad5780635b2ce58614620008175780635b6beeb914620008345780635c866c7814620008b0578063640e7fd5146200090857806367d90da214620009435780637048027514620009ce5780637065cb481462000a0a57806374ddcd6e1462000a465780637633a22c1462000ab5578063779d86771462000af05780639172fe081462000b40578063af92c1811462000b70578063b6010fcd1462000b88578063b9d191661462000c28578063bfb231d21462000ca0578063c19d93fb1462000d06578063cd5cfdaf1462000d41578063d4c2f75c1462000da7578063e1b2e8b31462000e2c578063ec6f214e1462000e68578063f63553b51462000f17578063f95fd40b1462000f81578063fbfa77cf1462000ff0578063fd08e0c71462001048575b620002163362001124565b005b34156200022457600080fd5b620002b9600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062001272565b604051808215151515815260200191505060405180910390f35b3415620002df57600080fd5b620002e962001345565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200033757600080fd5b6200036e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506200136b565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b3415620003d157600080fd5b620003e96004808035906020019091905050620013d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200043757600080fd5b62000465600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001418565b005b34156200047357600080fd5b6200047d62001525565b60405180826000191660001916815260200191505060405180910390f35b3415620004a757600080fd5b620004b1620017c2565b6040518082815260200191505060405180910390f35b3415620004d357600080fd5b62000501600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050620017c8565b6040518082815260200191505060405180910390f35b34156200052357600080fd5b62000551600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001814565b604051808215151515815260200191505060405180910390f35b34156200057757600080fd5b620005a5600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001834565b604051808215151515815260200191505060405180910390f35b3415620005cb57600080fd5b620005d562001854565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156200061a578082015181840152602081019050620005fd565b505050509050019250505060405180910390f35b34156200063a57600080fd5b62000644620018ec565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200068657808201518184015260208101905062000669565b50505050905090810190601f168015620006b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415620006ce57600080fd5b62000705600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506200198e565b005b34156200071357600080fd5b6200072f60048080356000191690602001909190505062001b6c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156200077157808201518184015260208101905062000754565b50505050905090810190601f1680156200079f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415620007b957600080fd5b620007d560048080356000191690602001909190505062001c8e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000832600480803560ff1690602001909190505062001cc1565b005b34156200084057600080fd5b62000892600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062002111565b60405180826000191660001916815260200191505060405180910390f35b3415620008bc57600080fd5b620008c66200217f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200091457600080fd5b6200091e620021a9565b604051808260068111156200092f57fe5b60ff16815260200191505060405180910390f35b620009b4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620021c0565b604051808215151515815260200191505060405180910390f35b3415620009da57600080fd5b62000a08600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506200240d565b005b341562000a1657600080fd5b62000a44600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506200257c565b005b341562000a5257600080fd5b62000a5c62002689565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000aa157808201518184015260208101905062000a84565b505050509050019250505060405180910390f35b341562000ac157600080fd5b62000acb62002721565b6040518082600681111562000adc57fe5b60ff16815260200191505060405180910390f35b341562000afc57600080fd5b62000b2a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062002734565b6040518082815260200191505060405180910390f35b62000b6e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062001124565b005b341562000b7c57600080fd5b62000b866200274c565b005b341562000b9457600080fd5b62000be6600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062002803565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000c3457600080fd5b62000c86600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620028e8565b604051808215151515815260200191505060405180910390f35b341562000cac57600080fd5b62000cc4600480803590602001909190505062002964565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000d1257600080fd5b62000d1c620029a4565b6040518082600281111562000d2d57fe5b60ff16815260200191505060405180910390f35b341562000d4d57600080fd5b62000d656004808035906020019091905050620029b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000db357600080fd5b62000e1260048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050620029f7565b604051808215151515815260200191505060405180910390f35b341562000e3857600080fd5b62000e66600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062002a8e565b005b62000efd600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505062002c6b565b604051808215151515815260200191505060405180910390f35b341562000f2357600080fd5b62000f3f6004808035600019169060200190919050506200335a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341562000f8d57600080fd5b62000f976200338d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101562000fdc57808201518184015260208101905062000fbf565b505050509050019250505060405180910390f35b341562000ffc57600080fd5b6200100662003425565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200105457600080fd5b620010a6600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506200344b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620010e8578082015181840152602081019050620010cb565b50505050905090810190601f168015620011165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6001600460146101000a81548160ff021916908360028111156200114457fe5b021790555062001160346005546200352490919063ffffffff16565b600581905550600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281620011b9919062003543565b916000526020600020906004020160006080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020013481526020016000815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620012cd57600080fd5b6200133d836040518082805190602001908083835b602083101515620013095780518252602082019150602081019050602083039250620012e2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902083620029f7565b905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007602052816000526040600020818154811015156200138757fe5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600181815481101515620013e857fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200147157600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620014ca57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060068111156200153457fe5b600460159054906101000a900460ff1660068111156200155057fe5b141562001580577f50726f766973696f6e696e6700000000000000000000000000000000000000009050620017bf565b600160068111156200158e57fe5b600460159054906101000a900460ff166006811115620015aa57fe5b1415620015da577f43657274696669656400000000000000000000000000000000000000000000009050620017bf565b60026006811115620015e857fe5b600460159054906101000a900460ff1660068111156200160457fe5b141562001634577f4d6f6469666965640000000000000000000000000000000000000000000000009050620017bf565b600360068111156200164257fe5b600460159054906101000a900460ff1660068111156200165e57fe5b14156200168e577f436f6d70726f6d697365640000000000000000000000000000000000000000009050620017bf565b600460068111156200169c57fe5b600460159054906101000a900460ff166006811115620016b857fe5b1415620016e8577f4d616c66756e6374696f6e696e670000000000000000000000000000000000009050620017bf565b60056006811115620016f657fe5b600460159054906101000a900460ff1660068111156200171257fe5b141562001742577f4861726d66756c000000000000000000000000000000000000000000000000009050620017bf565b6006808111156200174f57fe5b600460159054906101000a900460ff1660068111156200176b57fe5b14156200179b577f436f756e746572666569740000000000000000000000000000000000000000009050620017bf565b7f436f756e7465726665697400000000000000000000000000000000000000000090505b90565b60055481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6200185e62003578565b6001805480602002602001604051908101604052809291908181526020018280548015620018e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162001897575b5050505050905090565b600b8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620019865780601f106200195a5761010080835404028352916020019162001986565b820191906000526020600020905b8154815290600101906020018083116200196857829003601f168201915b505050505081565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620019e757600080fd5b60016002811115620019f557fe5b600460149054906101000a900460ff16600281111562001a1157fe5b14151562001a1e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151562001a5f57600080fd5b600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480600101828162001ab2919062003543565b916000526020600020906004020160006080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff1681526020014281526020018681526020016001815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b62001b766200358c565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562001bcf57600080fd5b6008600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562001c825780601f1062001c565761010080835404028352916020019162001c82565b820191906000526020600020905b81548152906001019060200180831162001c6457829003601f168201915b50505050509050919050565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6509184e72a0003411156200210e5780600460156101000a81548160ff0219169083600681111562001cef57fe5b0217905550600181600681111562001d0357fe5b111562001e5857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430307f4865616c74685761726e696e67000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b151562001e3457600080fd5b6125ee5a03f1151562001e4657600080fd5b50505050604051805190505062001fa1565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430307f4865616c746855706461746500000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b151562001f8257600080fd5b6125ee5a03f1151562001f9457600080fd5b5050505060405180519050505b7fb6d7372bb54b80a5b1d60d3b1da737719783cc92a2095f10d9195105f7abeca5816040518082600681111562001fd457fe5b60ff16815260200191505060405180910390a162001ffe346005546200352490919063ffffffff16565b600581905550600760003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480600101828162002057919062003543565b916000526020600020906004020160006080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020013481526020016000815250909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505b50565b6000816040518082805190602001908083835b6020831015156200214b578051825260208201915060208101905060208303925062002124565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460159054906101000a900460ff16905090565b600080620021ce8362002111565b90506000620021dd8462002803565b73ffffffffffffffffffffffffffffffffffffffff161415620022ba57600c8054806001018281620022109190620035a0565b9160005260206000209001600086909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600d6000836000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430877f4e6577436174616c6f67756500000000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b1515620023e457600080fd5b6125ee5a03f11515620023f657600080fd5b505050506040518051905050600191505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200246557600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620024bd57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600180548060010182816200252a9190620035a0565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620025d557600080fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200262e57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200269362003578565b600c8054806020026020016040519081016040528092919081815260200182805480156200271757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620026cc575b5050505050905090565b600460159054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620027a557600080fd5b60016002811115620027b357fe5b600460149054906101000a900460ff166002811115620027cf57fe5b141515620027dc57600080fd5b6002600460146101000a81548160ff02191690836002811115620027fc57fe5b0217905550565b6000806001835110156200281a57309150620028e2565b620028258362002111565b9050600073ffffffffffffffffffffffffffffffffffffffff16600d6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620028dd57600d6000826000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150620028e2565b600091505b50919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156200294257600080fd5b81600b90805190602001906200295a929190620035cf565b5060019050919050565b600c818154811015156200297457fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b600981815481101515620029c757fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002a5257600080fd5b81600860008560001916600019168152602001908152602001600020908051906020019062002a83929190620035cf565b506001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002ae857600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151562002b4057600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b60018054905081101562002c675760018181548110151562002bba57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562002c595760018181548110151562002c2a57fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808060010191505062002b9c565b5050565b600080600062002c7b8562002111565b9150600073ffffffffffffffffffffffffffffffffffffffff16600a6000846000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562003092576001905080805480600101828162002d079190620035a0565b9160005260206000209001600030909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080805480600101828162002d6b9190620035a0565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001868662002deb62003656565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818154815260200191508054801562002e9f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162002e54575b5050848103835286818151815260200191508051906020019080838360005b8381101562002edb57808201518184015260208101905062002ebe565b50505050905090810190601f16801562002f095780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b8381101562002f4457808201518184015260208101905062002f27565b50505050905090810190601f16801562002f725780820380516001836020036101000a031916815260200191505b50975050505050505050604051809103906000f080151562002f9357600080fd5b600a6000846000191660001916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009805480600101828162003002919062003667565b91600052602060002090016000600a6000866000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620031cb565b600a6000836000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631aae2531856000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156200316057808201518184015260208101905062003143565b50505050905090810190601f1680156200318e5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1515620031ad57600080fd5b6102c65a03f11515620031bf57600080fd5b50505060405180519050505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d6d3b6e3430600a6000876000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f4d657461446174615570646174650000000000000000000000000000000000006000604051602001526040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200193505050506020604051808303818588803b15156200333057600080fd5b6125ee5a03f115156200334257600080fd5b50505050604051805190505060019250505092915050565b600d6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6200339762003696565b60098054806020026020016040519081016040528092919081815260200182805480156200341b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620033d0575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b620034556200358c565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515620034ae57600080fd5b6200351d826040518082805190602001908083835b602083101515620034ea5780518252602082019150602081019050602083039250620034c3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902062001b6c565b9050919050565b60008082840190508381101515156200353957fe5b8091505092915050565b8154818355818115116200357357600402816004028360005260206000209182019101620035729190620036aa565b5b505050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b815481835581811511620035ca57818360005260206000209182019101620035c991906200370b565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200361257805160ff191683800117855562003643565b8280016001018555821562003643579182015b828111156200364257825182559160200191906001019062003625565b5b5090506200365291906200370b565b5090565b604051610ff0806200373483390190565b81548183558181151162003691578183600052602060002091820191016200369091906200370b565b5b505050565b602060405190810160405280600081525090565b6200370891905b808211156200370457600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160009055600382016000905550600401620036b1565b5090565b90565b6200373091905b808211156200372c57600081600090555060010162003712565b5090565b905600606060405234156200001057600080fd5b60405162000ff038038062000ff0833981016040528080519060200190919080518201919060200180518201919060200180518201919050508260008090505b8151811015620000d757600160008084848151811015156200006e57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505062000050565b8160019080519060200190620000ef9291906200016f565b50505083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600390805190602001906200014b929190620001fe565b50806004908051906020019062000164929190620001fe565b5050505050620002f3565b828054828255906000526020600020908101928215620001eb579160200282015b82811115620001ea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000190565b5b509050620001fa919062000285565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024157805160ff191683800117855562000272565b8280016001018555821562000272579182015b828111156200027157825182559160200191906001019062000254565b5b509050620002819190620002cb565b5090565b620002c891905b80821115620002c457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016200028c565b5090565b90565b620002f091905b80821115620002ec576000816000905550600101620002d2565b5090565b90565b610ced80620003036000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fe4e9e81461009e57806314bfd6d01461013a5780631aae25311461019d57806324d7806c1461021257806331ae450b146102635780633c6bb436146102cd578063704802751461035b578063ce26e78a14610394578063e1b2e8b314610422575b600080fd5b34156100a957600080fd5b6100bf600480803590602001909190505061045b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ff5780820151818401526020810190506100e4565b50505050905090810190601f16801561012c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014557600080fd5b61015b6004808035906020019091905050610517565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101a857600080fd5b6101f8600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610556565b604051808215151515815260200191505060405180910390f35b341561021d57600080fd5b610249600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061060b565b604051808215151515815260200191505060405180910390f35b341561026e57600080fd5b61027661062b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102b957808201518184015260208101905061029e565b505050509050019250505060405180910390f35b34156102d857600080fd5b6102e06106bf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610320578082015181840152602081019050610305565b50505050905090810190601f16801561034d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561036657600080fd5b610392600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061075d565b005b341561039f57600080fd5b6103a76108c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103e75780820151818401526020810190506103cc565b50505050905090810190601f1680156104145780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561042d57600080fd5b610459600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610966565b005b60058181548110151561046a57fe5b90600052602060002090016000915090508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050f5780601f106104e45761010080835404028352916020019161050f565b820191906000526020600020905b8154815290600101906020018083116104f257829003601f168201915b505050505081565b60018181548110151561052657fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156105af57600080fd5b600580548060010182816105c39190610b3c565b9160005260206000209001600084909190915090805190602001906105e9929190610b68565b50508160049080519060200190610601929190610b68565b5060019050919050565b60006020528060005260406000206000915054906101000a900460ff1681565b610633610be8565b60018054806020026020016040519081016040528092919081815260200182805480156106b557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161066b575b5050505050905090565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b505050505081565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156107b457600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561080b57600080fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600180548060010182816108769190610bfc565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561095e5780601f106109335761010080835404028352916020019161095e565b820191906000526020600020905b81548152906001019060200180831161094157829003601f168201915b505050505081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156109bf57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610a1657600080fd5b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600180549050811015610b3857600181815481101515610a8e57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b2b57600181815481101515610afc57fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050610a72565b5050565b815481835581811511610b6357818360005260206000209182019101610b629190610c28565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ba957805160ff1916838001178555610bd7565b82800160010185558215610bd7579182015b82811115610bd6578251825591602001919060010190610bbb565b5b509050610be49190610c54565b5090565b602060405190810160405280600081525090565b815481835581811511610c2357818360005260206000209182019101610c229190610c54565b5b505050565b610c5191905b80821115610c4d5760008181610c449190610c79565b50600101610c2e565b5090565b90565b610c7691905b80821115610c72576000816000905550600101610c5a565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610c9f5750610cbe565b601f016020900490600052602060002090810190610cbd9190610c54565b5b505600a165627a7a72305820d1e0c57c2752e24b9be15023018c713d67e22f22e1555cf5b6b70a5012ab42fe0029a165627a7a72305820d66dd69a9c3a4836a55b4f58d39589b5e285f5671de04f30d50580108767871e0029a165627a7a72305820be0b8d445039c162743883aaf66e4ce9cfc596a374a8a73fbfbdad531859537f0029",
  "deployedBytecode": "",
  "sourceMap": "54:1146:8:-;;;153:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:12;564:6:10;571:1;564:8;;559:91;578:12;:19;574:1;:23;559:91;;;639:4;614:7;:24;622:12;635:1;622:15;;;;;;;;;;;;;;;;;;614:24;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;599:3;;;;;;;559:91;;;663:12;656:6;:19;;;;;;;;;;;;:::i;:::-;;495:185;;300:9:8;291:8;;:18;;;;;;;;;;;;;;;;;;328:10;318:9;;:20;;;;;;;;;;;;;;;;;;153:190;;;54:1146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "54:1146:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;350:840:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:158:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;307:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;1301:102::-;1355:9;;:::i;:::-;1392:6;1385:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:102;:::o;350:840:8:-;437:4;496:12;599:24;;:::i;:::-;475:8;463:9;:20;459:701;;;509:9;;;;;;;;;;;:17;;;527:5;509:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:37:8;;564:1;548:18;;:4;:18;;;544:378;;;638:1;624:16;;;;;;;;;;;;;;;;;;;;;;;;599:41;;666:10;655:7;663:1;655:10;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;710:11;691:7;699:1;691:10;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;758:4;739:7;747:1;739:10;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;799:9;;;;;;;;;;;780:7;788:1;780:10;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;870:8;;;;;;;;;;;880:7;889:5;856:39;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:53:8;;544:378;942:8;;;;;;;;;;;:20;;;973:4;980;942:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:11;:22;;;1045:1;1035:9;:11;;;;;;;;1058:4;1065:5;1006:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:65:8;1089:9;;;;;;;;;;;:20;;;1126:1;1116:9;:11;;;;;;;;1139:4;1146:5;1089:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:70:8;;;;459:701;1173:5;1166:12;;350:840;;;;;;;:::o;837:158:10:-;799:7;:19;807:10;799:19;;;;;;;;;;;;;;;;;;;;;;;;;791:28;;;;;;;;913:7;:19;921:10;913:19;;;;;;;;;;;;;;;;;;;;;;;;;905:28;;;;;;;;958:4;943:7;:14;951:5;943:14;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;972:6;:18;;;;;;;;;;;:::i;:::-;;;;;;;;;;984:5;972:18;;;;;;;;;;;;;;;;;;;;;;;837:158;:::o;1001:296::-;1144:6;799:7;:19;807:10;799:19;;;;;;;;;;;;;;;;;;;;;;;;;791:28;;;;;;;;1078:7;:19;1086:10;1078:19;;;;;;;;;;;;;;;;;;;;;;;;;1070:28;;;;;;;;1124:5;1108:7;:15;1116:6;1108:15;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;1151:1;1144:8;;1139:135;1158:6;:13;;;;1154:1;:17;1139:135;;;1204:6;1211:1;1204:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:17;;:6;:17;;;1192:72;;;1240:6;1247:1;1240:9;;;;;;;;;;;;;;;;;;;1233:16;;;;;;;;;;;1192:72;1173:3;;;;;;;1139:135;;;1001:296;;:::o;54:1146:8:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18; \n\nimport \"./GraphRoot.sol\";\n\ncontract SmartNode is Administered {\n  \n  SmartKey smartKey;\n  GraphRoot graphRoot;\n  \n         \n  function SmartNode(GraphRoot _graphRoot, SmartKey _smartKey, address[] adminAddress) \n    Administered(adminAddress)\n    public\n  {\n      smartKey=_smartKey; \n      graphRoot=_graphRoot;\n  }\n\n  \n  function upsertItem(GraphNode _parentNode, string _href)\n  public\n  payable\n  returns (bool)\n  {\n      \n     if (msg.value > 10000000) {\n         address addr=graphRoot.getItem(_href);\n         if (addr == address(0)) { \n             \n              address[] memory _admins=new address[](4);\n             _admins[0]=msg.sender;\n             _admins[1]=address(_parentNode);  \n             _admins[2]=address(this);  \n             _admins[3]=address(graphRoot);  \n                \n             addr=address(new GraphNode(smartKey, _admins, _href));\n             \n         }\n         \n         smartKey.putSmartKey(GraphNode(addr), addr);\n         \n         _parentNode.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n         return graphRoot.upsertItem.value(msg.value/2)(GraphNode(addr), _href);\n     }\n     return false;\n      \n  }\n    \n  \n}",
  "sourcePath": "/mnt/d/iotblock/server/browser/contracts/SmartNode.sol",
  "ast": {
    "absolutePath": "/mnt/d/iotblock/server/browser/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1120
      ]
    },
    "id": 1121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 967,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/mnt/d/iotblock/server/browser/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 968,
        "nodeType": "ImportDirective",
        "scope": 1121,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 969,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1392,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1392",
                "typeString": "contract Administered"
              }
            },
            "id": 970,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1120,
        "linearizedBaseContracts": [
          1120,
          1392
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 972,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1120,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$965",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 971,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 965,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$965",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 974,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1120,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 973,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 987,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$965",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 988,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$965",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$965",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 991,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 992,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "id": 996,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 984,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 981,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 985,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 983,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1392,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1392_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 975,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$965",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 977,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 965,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$965",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 979,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 980,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1120,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "445:745:8",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1005,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4516,
                        "src": "463:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "463:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130303030303030",
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "475:8:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000_by_1",
                        "typeString": "int_const 10000000"
                      },
                      "value": "10000000"
                    },
                    "src": "463:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1115,
                  "nodeType": "IfStatement",
                  "src": "459:701:8",
                  "trueBody": {
                    "id": 1114,
                    "nodeType": "Block",
                    "src": "485:675:8",
                    "statements": [
                      {
                        "assignments": [
                          1010
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1010,
                            "name": "addr",
                            "nodeType": "VariableDeclaration",
                            "scope": 1119,
                            "src": "496:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1009,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "496:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1015,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1013,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "527:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1011,
                              "name": "graphRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "509:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphRoot_$230",
                                "typeString": "contract GraphRoot"
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
                            "src": "509:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "509:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "496:37:8"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1016,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "548:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "564:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "556:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "556:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1074,
                        "nodeType": "IfStatement",
                        "src": "544:378:8",
                        "trueBody": {
                          "id": 1073,
                          "nodeType": "Block",
                          "src": "568:354:8",
                          "statements": [
                            {
                              "assignments": [
                                1024
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1024,
                                  "name": "_admins",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1119,
                                  "src": "599:24:8",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1022,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "599:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1023,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "599:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1030,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "34",
                                    "id": 1028,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "638:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    }
                                  ],
                                  "id": 1027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "624:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1025,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "628:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1026,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "628:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  }
                                },
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "624:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "599:41:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1031,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "655:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1033,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "663:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "655:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1034,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "666:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "666:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "655:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1037,
                              "nodeType": "ExpressionStatement",
                              "src": "655:21:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1038,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "691:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1040,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "699:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "691:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1042,
                                      "name": "_parentNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 998,
                                      "src": "710:11:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    ],
                                    "id": 1041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "702:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "702:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "691:31:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1045,
                              "nodeType": "ExpressionStatement",
                              "src": "691:31:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1046,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "739:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1048,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 1047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "747:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "739:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1050,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4569,
                                      "src": "758:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SmartNode_$1120",
                                        "typeString": "contract SmartNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SmartNode_$1120",
                                        "typeString": "contract SmartNode"
                                      }
                                    ],
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "750:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "750:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "739:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1053,
                              "nodeType": "ExpressionStatement",
                              "src": "739:24:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1054,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "780:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1056,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 1055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "788:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "780:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1058,
                                      "name": "graphRoot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 974,
                                      "src": "799:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                                        "typeString": "contract GraphRoot"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                                        "typeString": "contract GraphRoot"
                                      }
                                    ],
                                    "id": 1057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "791:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "791:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "780:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1061,
                              "nodeType": "ExpressionStatement",
                              "src": "780:29:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1062,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "843:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1066,
                                          "name": "smartKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "870:8:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_SmartKey_$965",
                                            "typeString": "contract SmartKey"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1067,
                                          "name": "_admins",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1024,
                                          "src": "880:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1068,
                                          "name": "_href",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1000,
                                          "src": "889:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_SmartKey_$965",
                                            "typeString": "contract SmartKey"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          },
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1065,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "856:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$965_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                          "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 1064,
                                          "name": "GraphNode",
                                          "nodeType": "UserDefinedTypeName",
                                          "referencedDeclaration": 208,
                                          "src": "860:9:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_GraphNode_$208",
                                            "typeString": "contract GraphNode"
                                          }
                                        }
                                      },
                                      "id": 1069,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "856:39:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    ],
                                    "id": 1063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "848:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "848:48:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "843:53:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1072,
                              "nodeType": "ExpressionStatement",
                              "src": "843:53:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1079,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "973:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1078,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "963:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1010,
                              "src": "980:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1075,
                              "name": "smartKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "942:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartKey_$965",
                                "typeString": "contract SmartKey"
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "putSmartKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 865,
                            "src": "942:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2586_$_t_address_$returns$__$",
                              "typeString": "function (contract Key,address) external"
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1083,
                        "nodeType": "ExpressionStatement",
                        "src": "942:43:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1095,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "1058:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1094,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "1048:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1048:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1097,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1065:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1089,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "1035:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1035:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1045:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "1035:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1084,
                                  "name": "_parentNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "1006:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "upsertItem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 167,
                                "src": "1006:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                                }
                              },
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1006:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                                "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1006:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                              "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1006:65:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1099,
                        "nodeType": "ExpressionStatement",
                        "src": "1006:65:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1109,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "1139:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1108,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "1129:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1111,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1146:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1103,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "1116:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1116:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1126:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "1116:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1100,
                                  "name": "graphRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 974,
                                  "src": "1089:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                                    "typeString": "contract GraphRoot"
                                  }
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "upsertItem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 167,
                                "src": "1089:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1089:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                                "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1089:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                              "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1089:63:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1004,
                        "id": 1113,
                        "nodeType": "Return",
                        "src": "1082:70:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1173:5:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1004,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "1166:12:8"
                }
              ]
            },
            "id": 1119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 997,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1120,
            "src": "350:840:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1121,
        "src": "54:1146:8"
      }
    ],
    "src": "0:1200:8"
  },
  "legacyAST": {
    "absolutePath": "/mnt/d/iotblock/server/browser/contracts/SmartNode.sol",
    "exportedSymbols": {
      "SmartNode": [
        1120
      ]
    },
    "id": 1121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 967,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/mnt/d/iotblock/server/browser/contracts/GraphRoot.sol",
        "file": "./GraphRoot.sol",
        "id": 968,
        "nodeType": "ImportDirective",
        "scope": 1121,
        "sourceUnit": 231,
        "src": "27:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 969,
              "name": "Administered",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1392,
              "src": "76:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administered_$1392",
                "typeString": "contract Administered"
              }
            },
            "id": 970,
            "nodeType": "InheritanceSpecifier",
            "src": "76:12:8"
          }
        ],
        "contractDependencies": [
          208,
          1392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1120,
        "linearizedBaseContracts": [
          1120,
          1392
        ],
        "name": "SmartNode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 972,
            "name": "smartKey",
            "nodeType": "VariableDeclaration",
            "scope": 1120,
            "src": "96:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SmartKey_$965",
              "typeString": "contract SmartKey"
            },
            "typeName": {
              "contractScope": null,
              "id": 971,
              "name": "SmartKey",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 965,
              "src": "96:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SmartKey_$965",
                "typeString": "contract SmartKey"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 974,
            "name": "graphRoot",
            "nodeType": "VariableDeclaration",
            "scope": 1120,
            "src": "117:19:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GraphRoot_$230",
              "typeString": "contract GraphRoot"
            },
            "typeName": {
              "contractScope": null,
              "id": 973,
              "name": "GraphRoot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 230,
              "src": "117:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GraphRoot_$230",
                "typeString": "contract GraphRoot"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "283:60:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 987,
                      "name": "smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "291:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$965",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 988,
                      "name": "_smartKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "300:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SmartKey_$965",
                        "typeString": "contract SmartKey"
                      }
                    },
                    "src": "291:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$965",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "id": 990,
                  "nodeType": "ExpressionStatement",
                  "src": "291:18:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 991,
                      "name": "graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "318:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 992,
                      "name": "_graphRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "328:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                        "typeString": "contract GraphRoot"
                      }
                    },
                    "src": "318:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "318:20:8"
                }
              ]
            },
            "id": 996,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 984,
                    "name": "adminAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 981,
                    "src": "256:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 985,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 983,
                  "name": "Administered",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1392,
                  "src": "243:12:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Administered_$1392_$",
                    "typeString": "type(contract Administered)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "243:26:8"
              }
            ],
            "name": "SmartNode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "name": "_graphRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "172:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                    "typeString": "contract GraphRoot"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 975,
                    "name": "GraphRoot",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 230,
                    "src": "172:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphRoot_$230",
                      "typeString": "contract GraphRoot"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "name": "_smartKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "194:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SmartKey_$965",
                    "typeString": "contract SmartKey"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 977,
                    "name": "SmartKey",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 965,
                    "src": "194:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SmartKey_$965",
                      "typeString": "contract SmartKey"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "name": "adminAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "214:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 979,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "214:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 980,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "214:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "171:66:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:8"
            },
            "scope": 1120,
            "src": "153:190:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "445:745:8",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1005,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4516,
                        "src": "463:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "463:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130303030303030",
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "475:8:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000_by_1",
                        "typeString": "int_const 10000000"
                      },
                      "value": "10000000"
                    },
                    "src": "463:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1115,
                  "nodeType": "IfStatement",
                  "src": "459:701:8",
                  "trueBody": {
                    "id": 1114,
                    "nodeType": "Block",
                    "src": "485:675:8",
                    "statements": [
                      {
                        "assignments": [
                          1010
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1010,
                            "name": "addr",
                            "nodeType": "VariableDeclaration",
                            "scope": 1119,
                            "src": "496:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1009,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "496:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1015,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1013,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "527:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1011,
                              "name": "graphRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "509:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphRoot_$230",
                                "typeString": "contract GraphRoot"
                              }
                            },
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
                            "src": "509:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "509:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "496:37:8"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1016,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "548:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "564:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "556:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "556:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1074,
                        "nodeType": "IfStatement",
                        "src": "544:378:8",
                        "trueBody": {
                          "id": 1073,
                          "nodeType": "Block",
                          "src": "568:354:8",
                          "statements": [
                            {
                              "assignments": [
                                1024
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1024,
                                  "name": "_admins",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1119,
                                  "src": "599:24:8",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1022,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "599:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1023,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "599:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1030,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "34",
                                    "id": 1028,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "638:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    }
                                  ],
                                  "id": 1027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "624:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                                    "typeString": "function (uint256) pure returns (address[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 1025,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "628:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1026,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "628:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  }
                                },
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "624:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory",
                                  "typeString": "address[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "599:41:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1031,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "655:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1033,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "663:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "655:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1034,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "666:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "666:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "655:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1037,
                              "nodeType": "ExpressionStatement",
                              "src": "655:21:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1038,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "691:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1040,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1039,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "699:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "691:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1042,
                                      "name": "_parentNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 998,
                                      "src": "710:11:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    ],
                                    "id": 1041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "702:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "702:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "691:31:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1045,
                              "nodeType": "ExpressionStatement",
                              "src": "691:31:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1046,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "739:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1048,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 1047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "747:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "739:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1050,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4569,
                                      "src": "758:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SmartNode_$1120",
                                        "typeString": "contract SmartNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SmartNode_$1120",
                                        "typeString": "contract SmartNode"
                                      }
                                    ],
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "750:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "750:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "739:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1053,
                              "nodeType": "ExpressionStatement",
                              "src": "739:24:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1054,
                                    "name": "_admins",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "780:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1056,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 1055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "788:1:8",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "780:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1058,
                                      "name": "graphRoot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 974,
                                      "src": "799:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                                        "typeString": "contract GraphRoot"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphRoot_$230",
                                        "typeString": "contract GraphRoot"
                                      }
                                    ],
                                    "id": 1057,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "791:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "791:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "780:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1061,
                              "nodeType": "ExpressionStatement",
                              "src": "780:29:8"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1062,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "843:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1066,
                                          "name": "smartKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 972,
                                          "src": "870:8:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_SmartKey_$965",
                                            "typeString": "contract SmartKey"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1067,
                                          "name": "_admins",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1024,
                                          "src": "880:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1068,
                                          "name": "_href",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1000,
                                          "src": "889:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_SmartKey_$965",
                                            "typeString": "contract SmartKey"
                                          },
                                          {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          },
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1065,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "856:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SmartKey_$965_$_t_array$_t_address_$dyn_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_GraphNode_$208_$",
                                          "typeString": "function (contract SmartKey,address[] memory,string memory) returns (contract GraphNode)"
                                        },
                                        "typeName": {
                                          "contractScope": null,
                                          "id": 1064,
                                          "name": "GraphNode",
                                          "nodeType": "UserDefinedTypeName",
                                          "referencedDeclaration": 208,
                                          "src": "860:9:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_GraphNode_$208",
                                            "typeString": "contract GraphNode"
                                          }
                                        }
                                      },
                                      "id": 1069,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "856:39:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_GraphNode_$208",
                                        "typeString": "contract GraphNode"
                                      }
                                    ],
                                    "id": 1063,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "848:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "848:48:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "843:53:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1072,
                              "nodeType": "ExpressionStatement",
                              "src": "843:53:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1079,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "973:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1078,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "963:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1010,
                              "src": "980:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1075,
                              "name": "smartKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "942:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartKey_$965",
                                "typeString": "contract SmartKey"
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "putSmartKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 865,
                            "src": "942:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Key_$2586_$_t_address_$returns$__$",
                              "typeString": "function (contract Key,address) external"
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:43:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1083,
                        "nodeType": "ExpressionStatement",
                        "src": "942:43:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1095,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "1058:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1094,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "1048:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1048:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1097,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1065:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1089,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "1035:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1035:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1091,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1045:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "1035:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1084,
                                  "name": "_parentNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "1006:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphNode_$208",
                                    "typeString": "contract GraphNode"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "upsertItem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 167,
                                "src": "1006:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                                }
                              },
                              "id": 1088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1006:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                                "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1006:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                              "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1006:65:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1099,
                        "nodeType": "ExpressionStatement",
                        "src": "1006:65:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1109,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1010,
                                  "src": "1139:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1108,
                                "name": "GraphNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "1129:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GraphNode_$208_$",
                                  "typeString": "type(contract GraphNode)"
                                }
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1111,
                              "name": "_href",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1000,
                              "src": "1146:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GraphNode_$208",
                                "typeString": "contract GraphNode"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1103,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4516,
                                    "src": "1116:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1116:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 1105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1126:1:8",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "1116:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1100,
                                  "name": "graphRoot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 974,
                                  "src": "1089:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GraphRoot_$230",
                                    "typeString": "contract GraphRoot"
                                  }
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "upsertItem",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 167,
                                "src": "1089:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                                }
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1089:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value_$",
                                "typeString": "function (uint256) returns (function (contract GraphNode,string memory) payable external returns (bool))"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1089:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_GraphNode_$208_$_t_string_memory_ptr_$returns$_t_bool_$value",
                              "typeString": "function (contract GraphNode,string memory) payable external returns (bool)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1089:63:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1004,
                        "id": 1113,
                        "nodeType": "Return",
                        "src": "1082:70:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1173:5:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1004,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "1166:12:8"
                }
              ]
            },
            "id": 1119,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "upsertItem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "name": "_parentNode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "370:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GraphNode_$208",
                    "typeString": "contract GraphNode"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 997,
                    "name": "GraphNode",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 208,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GraphNode_$208",
                      "typeString": "contract GraphNode"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "_href",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "393:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:37:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "437:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "436:6:8"
            },
            "scope": 1120,
            "src": "350:840:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1121,
        "src": "54:1146:8"
      }
    ],
    "src": "0:1200:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0xfb88de099e13c3ed21f80a7a1e49f8caecf10df6",
      "transactionHash": "0x14cff36be1aadcba1a03fe270706d3c292f911fdc6ce142af35baaf8bf9e36da"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-13T11:55:26.484Z"
}